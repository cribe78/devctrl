var DevCtrl={stateConfig:["$stateProvider","$locationProvider","$urlRouterProvider",function(a,d,b){a.state("rooms",{url:"/rooms",scope:!0,controller:"RoomsCtrl",controllerAs:"rooms",templateUrl:"ng/locations.html",resolve:DevCtrl.Common.Resolve,data:{title:"Locations"}}).state("rooms.room",{url:"/:name",templateUrl:"ng/room.html",controller:"RoomCtrl",controllerAs:"room",data:{listByName:"rooms",title:!1}}).state("endpoints",{url:"/devices",templateUrl:"ng/endpoints.html",resolve:DevCtrl.Common.Resolve,
data:{title:"Devices"}}).state("endpoints.endpoint",{url:"/:id",templateUrl:"ng/endpoint.html",controller:"EndpointCtrl",controllerAs:"endpoint",data:{listByName:"control_endpoints",title:!1}}).state("config",{url:"/config",scope:!0,templateUrl:"ng/config.html",resolve:DevCtrl.Common.Resolve,data:{title:"Configuration"}}).state("config.data",{url:"/data",templateUrl:"ng/data.html",data:{title:"Data Tables"}}).state("config.data.table",{url:"/:name",templateUrl:"ng/tableeditor.html",controller:"TableCtrl",
controllerAs:"table",resolve:DevCtrl.Table.Resolve,data:{title:"Table Editor"}});b.when("/","/rooms");d.html5Mode(!0)}]};DevCtrl.Common={};DevCtrl.Common.Resolve={loadControls:function(a){return a.getTablePromise("controls")},loadControlTemplates:function(a){return a.getTablePromise("control_templates")},loadRooms:function(a){return a.getTablePromise("rooms")},loadPanels:function(a){return a.getTablePromise("panels")},loadPanelControls:function(a){return a.getTablePromise("panel_controls")}};DevCtrl.Room={};
DevCtrl.Room.Ctrl=["$stateParams","DataService",function(a,d){var b=this;this.roomName=a.name;this.rooms=d.getTable("rooms");angular.forEach(this.rooms.listed,function(a){a.fields.name==b.roomName&&(b.obj=a,b.id=a.id)});this.panels=this.obj.referenced.panels;this.openedGroup="";this.groups=[];this.getGroups=function(){angular.forEach(b.panels,function(a){-1==b.groups.indexOf(a.fields.grouping)&&b.groups.push(a.fields.grouping)});return b.groups};this.panelControls=function(a){if(angular.isDefined(a.referenced.panel_controls))return a.referenced.panel_controls};this.toggleGroup=
function(a){this.openedGroup=a==this.openedGroup?"":a};this.isGroupOpen=function(a){return a==this.openedGroup}}];DevCtrl.MainCtrl=["$state","$mdSidenav","DataService","MenuService",function(a,d,b,e){this.msg="Hello World!";this.tiles=[{img:"/images/orc.png"},{img:"/images/pict.png"},{img:"/images/sage.png"}];this.$state=a;this.schema=b.schema;this.menu=e;this.control_endpoints=b.getTable("control_endpoints");this.toggleSidenav=function(a){d(a).toggle()};this.go=function(b){angular.isString(b)?a.go(b):a.go(b.name,b.params)};this.dataModel=b.dataModel;this.title="DevCtrl";this.top=!0}];DevCtrl.Menu={};DevCtrl.Menu.Directive=["MenuService","$state",function(a,d){return{scope:!0,bindToController:{},controller:function(a,d){this.service=a},controllerAs:"menu",templateUrl:"ng/menu.html"}}];DevCtrl.DataService={};
DevCtrl.DataService.factory=["$http","$mdToast","$timeout","socketFactory","$mdDialog",function(a,d,b,e,c){var g={},h={},k=!1,m=a.get("schema.php").success(function(a){angular.isDefined(a.schema)&&angular.forEach(a.schema,function(a,l){var b=f.getSchema(l);angular.merge(b,a);angular.isDefined(b.foreign_keys)&&angular.forEach(b.foreign_keys,function(a,l){b.referenced[a]=l})});k=!0}).error(function(a){f.errorToast(a)}),q=io("https://devctrl.dwi.ufl.edu/");e=e({ioSocket:q});var p={},n={},f={messenger:e,
dataModel:g,schema:h,addRow:function(b){a.post("data.php",b).success(function(a){f.loadData(a);angular.forEach(b,function(a,c){"table"!=c&&(b[c]=null)})}).error(function(a){f.errorToast(a)})},deleteRow:function(b){a.delete("data.php/"+b.tableName+"/"+b.id).success(function(a){f.loadData(a)}).error(function(a){f.errorToast(a)})},editRecord:function(a,b,d){b="0"!==b?f.getRowRef(d,b):f.getNewRowRef(d);c.show({targetEvent:a,locals:{obj:b},controller:DevCtrl.Record.Ctrl,controllerAs:"record",bindToController:!0,
templateUrl:"ng/record.html",clickOutsideToClose:!0,hasBackdrop:!1})},editRecordClose:function(){c.hide()},errorToast:function(a){var b="An unknown error has occured";angular.isDefined(a.error)&&(b=a.error);d.show(d.simple().content(b))},getNewRowRef:function(a){var b={id:"0",referenced:{},tableName:a,fields:{}};a=f.getSchema(a);angular.forEach(a.fields,function(a,l){b.fields[l]=""});return b},getRowRef:function(a,b){if(!angular.isDefined(a))return console.error("error looking up record for undefined table"),
{};if(!angular.isDefined(b)||null===b)return console.error("error looking up %s record for undefined key",a),{};var c=this.getTableRef(a);if(angular.isString(h[a].pk))return angular.isDefined(c.indexed[b])||(c.indexed[b]={fields:{},foreign:{},id:b,loaded:!1,referenced:{},tableName:a},c.listed.push(c.indexed[b])),c.indexed[b];console.error("multi column keys not supported, table %s",a)},getMenu:function(){angular.isDefined(g.menu)||(g.menu={items:{}},a.get("menu.php").success(function(a){angular.isDefined(a.menu.items)?
(console.log("test/menu.php loaded"),g.menu.items=a.menu.items):console.log("test/menu.php did not return a valid menu object")}).error(function(a){f.errorToast(a)}));return g.menu},getSchema:function(a){h.loaded||angular.isDefined(h[a])||(h[a]={referenced:{},foreign_keys:{}});return h[a]},getTable:function(a){angular.isDefined(g[a])?angular.isDefined(n[a])||(n[a]=this.getTablePromise(a)):(this.getTableRef(a),n[a]=this.getTablePromise(a));return g[a]},getTablePromise:function(b){if(angular.isDefined(n[b]))return n[b];
if(angular.isDefined(b))return a.get("data.php?table="+b).success(function(a){f.loadData(a)}).error(function(a){f.errorToast(a)});console.error("error: attempt to fetch undefined table!")},getTableRef:function(a){angular.isDefined(g[a])||(g[a]={listed:[],indexed:{},loaded:!1});return g[a]},loadData:function(a){k?f.loadDataKernel(a):m=m.then(function(){f.loadDataKernel(a)})},loadDataKernel:function(a){angular.isDefined(a.update)&&angular.forEach(a.update,function(a,b){angular.forEach(a,function(a,
c){var d=f.getRowRef(b,c);angular.merge(d.fields,a)})});angular.isDefined(a.add)&&angular.forEach(a.add,function(a,b){var c=f.getSchema(b),d=c.pk,g=c.foreign_keys;angular.forEach(a,function(a,c){if(angular.isString(d)){var e=f.getRowRef(b,c);angular.merge(e.fields,a);e.loaded=!0;angular.forEach(g,function(a,c){if(null!==e.fields[c]){var d=f.getRowRef(a,e.fields[c]);angular.isDefined(d.referenced[b])||(d.referenced[b]={});d.referenced[b][e.id]=e;e.foreign[a]=d;e.foreign[c]=d}else e.foreign[a]=null,
e.foreign[c]=null})}else console.error("Error loading %s, multi-keyed records not supported",b)})});angular.isDefined(a.delete)&&angular.forEach(a.delete,function(a,b){var c=f.getSchema(b).pk;angular.forEach(a,function(a,d){angular.isString(c)?delete g[b].indexed[d]:angular.forEach(a,function(a,c){delete g[b].indexed[d][c]})});g[b].listed.length=0;angular.forEach(g[b].indexed,function(a,d){angular.isString(c)?g[b].listed.push(a):angular.forEach(a,function(a){g[b].listed.push(a)})})})},updateControlValue:function(c){angular.isDefined(p[c.id])&&
b.cancel(p[c.id]);p[c.id]=b(function(b,c){var d="control.php/"+b.id;pendingDebounce=!1;a.put(d,b.fields).success(function(a){c.loadData(a)}).error(function(a){c.errorToast(a)})},200,!0,c,f)},updateRow:function(b){a.put("data.php/"+b.tableName+"/"+b.id,b.fields).success(function(a){f.loadData(a)}).error(function(a){f.errorToast(a)})}};e.on("control-data",function(a){f.loadData(a)});return f}];DevCtrl.EnumSelect={};
DevCtrl.EnumSelect.Directive=["DataService",function(a){return{scope:{tableName:"=table",field:"=",selectModel:"="},bindToController:!0,controller:function(a){this.enums=a.getTable("enums");this.enumVals=a.getTable("enum_vals");this.schema=a.getSchema(this.tableName);this.enumId=function(){var a=0,d=this.tableName+"."+this.field.name;angular.forEach(this.enums.indexed,function(c,g){c.fields.name==d&&(a=g)});return a};this.options=function(){var a=this.enumId(),d={};0<a&&(d=this.enums.indexed[a].referenced.enum_vals);return d}},
controllerAs:"enumSelect",templateUrl:"ng/enum-select.html"}}];DevCtrl.Ctrl={};
DevCtrl.Ctrl.Directive=["DataService",function(a){return{scope:{panelControl:"=",controlId:"="},bindToController:!0,controller:function(a){angular.isDefined(this.panelControl)?(this.ctrl=this.panelControl.foreign.controls,this.name=this.panelControl.fields.name):(this.ctrl=a.getTable("controls").indexed[this.controlId],this.name=this.ctrl.fields.name);this.template=this.ctrl.foreign.control_templates;this.type=this.template.fields.usertype;this.enums=a.getTable("enums");this.enumVals=a.getTable("enum_vals");
var b=this;this.normalizedValue=function(){var a=b.ctrl.fields.value,c=b.template.fields.max,d=b.template.fields.min,a=a<d?d:a;return((a>c?c:a)+(0-d))*(c-d)/100};this.updateValue=function(){a.updateControlValue(b.ctrl)};this.selectMenuItem=function(a){b.ctrl.fields.value=a;b.updateValue()};this.selectOptions=function(){var a=b.ctrl.fields.enum_id,c={};0<a&&(c=b.enums.indexed[a].referenced.enum_vals);return c}},controllerAs:"ctrl",templateUrl:"ng/ctrl.html"}}];DevCtrl.SwitchSet={};
DevCtrl.SwitchSet.Directive=["DataService",function(a){return{scope:!0,bindToController:{control:"="},controller:function(a){var b=this,e={},c={};this.setAll=function(b){angular.forEach(e,function(c,e){c.fields.value=b;a.updateControlValue(c)})};this.slaveControls=function(){angular.forEach(b.control.referenced.control_sets,function(a,b){c[a.foreign.slave_control_id.id]=a.fields.name;e[a.foreign.slave_control_id.id]=a.foreign.slave_control_id});return e};this.slaveName=function(a){return c[a.id]};this.updateCtrlValue=
function(b){a.updateControlValue(b)}},controllerAs:"switchSet",templateUrl:"ng/switch-set.html"}}];DevCtrl.Record={};DevCtrl.Record.Ctrl=["DataService",function(a){this.newRow="0"===this.obj.id;this.schema=a.getSchema(this.obj.tableName);var d=this;this.addRow=function(){a.addRow(d.obj);a.editRecordClose()};this.deleteRow=function(){a.deleteRow(d.obj);a.editRecordClose()};this.updateRow=function(){a.updateRow(d.obj);a.editRecordClose()};this.cloneRow=function(){var b=angular.copy(d.obj);a.addRow(b);a.editRecordClose()};this.close=function(){a.editRecordClose()}}];
DevCtrl.Record.Resolve={loadTable:["tableName","DataService",function(a,d){return d.getTablePromise(a)}]};DevCtrl.MenuService={};
DevCtrl.MenuService.factory=["$state","DataService",function(a,d){var b={pageTitle:function(){return a.current.title||a.params.name},parentState:function(){return a.get("^")},isFirstLevel:function(){return""===a.current.name||""===a.get("^").name},items:{},states:function(){return a.get()},menuItems:function(){var e=a.get();angular.forEach(e,function(c,d){""!=c.name&&(c.isOpened=a.includes(c),""==a.get("^",c).name&&(b.items[c.name]=c,angular.isDefined(c.substates)||(c.substates={})),angular.isDefined(c.data.title)&&
(c.title=c.data.title))});angular.forEach(e,function(c,e){if(""!=c.name){var h=a.get("^",c);if(angular.isDefined(b.items[h.name]))if(angular.isDefined(c.data.listByName)){var k=d.getTable(c.data.listByName).listed;angular.forEach(k,function(a){angular.isDefined(h.substates[a.id])?(h.substates[a.id].params.name=a.fields.name,h.substates[a.id].title=a.fields.name):h.substates[a.id]={name:c.name,params:{name:a.fields.name,id:a.id},title:a.fields.name}})}else b.items[h.name].substates[c.name]=c}});return b.items}};
return b}];DevCtrl.Endpoint={};DevCtrl.Endpoint.Ctrl=["$stateParams","DataService",function(a,d){this.endpointId=a.id;this.endpoints=d.getTable("control_endpoints");this.obj=this.endpoints.indexed[this.endpointId];a.name=this.obj.fields.name;this.controls=this.obj.referenced.controls;this.togglePanel=function(a){angular.isDefined(a.opened)?a.opened=!a.opened:a.opened=!0};this.isPanelOpen=function(a){return angular.isDefined(a.opened)&&a.opened}}];DevCtrl.FkSelect={};DevCtrl.FkSelect.Directive=["DataService",function(a){return{scope:{tableName:"=table",field:"=",selectModel:"="},bindToController:!0,controller:function(a){this.options=a.getTable(this.tableName);this.schema=a.getSchema(this.tableName)},controllerAs:"fkSelect",templateUrl:"ng/fk-select.html"}}];DevCtrl.Table={};
DevCtrl.Table.Ctrl=["$scope","$stateParams","DataService",function(a,d,b){var e=this;this.tableName=d.name;this.data=b.getTable(this.tableName);this.schema=b.getSchema(this.tableName);this.newRow={table:this.tableName};b.messenger.emit("status-update",{message:"table "+this.tableName+" loaded"});this.sortColumn="id";this.sortReversed=!1;this.setSortColumn=function(a){"fields."+a.name===this.sortColumn?this.sortReversed=!this.sortReversed:(this.sortColumn="fields."+a.name,this.sortReversed=!1)};this.deleteRow=
function(a){a.table=this.tableName;b.deleteRow(a)};this.fkDisplayVal=function(a,d){var e=b.getSchema(this.schema.foreign_keys[a.name]);if(!angular.isDefined(d.foreign[a.name]))return"";var k=d.foreign[a.name];if(null==k)return"NULL";var m=k.id;angular.isDefined(k.fields[e.fk_name])&&(m=k.fields[e.fk_name]);return m};this.addRow=function(a){b.editRecord(a,"0",e.tableName)};this.openRecord=function(a,d){b.editRecord(a,d,e.tableName)};this.updateRow=function(a,d){b.updateRow(d)}}];
DevCtrl.Table.Resolve={tableName:["$stateParams",function(a){return a.table}]};DevCtrl.Rooms={};DevCtrl.Rooms.Ctrl=["DataService",function(a){this.list=a.getTable("rooms").listed;this.imageUrl=function(a){return"/images/"+a.fields.name+".png"}}];DevCtrl.Panel={};DevCtrl.Panel.Directive=["DataService",function(a){return{scope:!0,bindToController:{panelObj:"="},controller:function(a){this.fields=this.panelObj.fields;this.pcontrols=this.panelObj.referenced.panel_controls},controllerAs:"panel",templateUrl:"ng/panel.html"}}];DevCtrl.App=angular.module("DevCtrlApp",["ui.router","ngMaterial","btford.socket-io","angular-toArrayFilter"]).factory("DataService",DevCtrl.DataService.factory).factory("MenuService",DevCtrl.MenuService.factory).directive("ctrl",DevCtrl.Ctrl.Directive).directive("coeMenu",DevCtrl.Menu.Directive).directive("devctrlPanel",DevCtrl.Panel.Directive).directive("fkSelect",DevCtrl.FkSelect.Directive).directive("enumSelect",DevCtrl.EnumSelect.Directive).directive("switchSet",DevCtrl.SwitchSet.Directive).controller("MainCtrl",
DevCtrl.MainCtrl).controller("EndpointCtrl",DevCtrl.Endpoint.Ctrl).controller("TableCtrl",DevCtrl.Table.Ctrl).controller("RecordCtrl",DevCtrl.Record.Ctrl).controller("RoomCtrl",DevCtrl.Room.Ctrl).controller("RoomsCtrl",DevCtrl.Rooms.Ctrl).config(DevCtrl.stateConfig).run(["$rootScope",function(a){a.$on("$stateChangeStart",function(a,b,e,c,g){console.log("$stateChangeStart to "+b.to+"- fired when the transition begins. toState,toParams : \n",b,e)});a.$on("$stateChangeError",function(a,b,e,c,g){console.log("$stateChangeError - fired when an error occurs during transition.");
console.log(arguments)});a.$on("$stateChangeSuccess",function(a,b,e,c,g){console.log("$stateChangeSuccess to "+b.name+"- fired once the state transition is complete.")});a.$on("$viewContentLoaded",function(a){console.log("$viewContentLoaded - fired after dom rendered",a)});a.$on("$stateNotFound",function(a,b,e,c){console.log("$stateNotFound "+b.to+"  - fired when a state cannot be found by its name.");console.log(b,e,c)})}]);
