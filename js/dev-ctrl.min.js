var DevCtrl={stateConfig:["$stateProvider","$locationProvider","$urlRouterProvider",function(c,e,a){c.state("rooms",{url:"/rooms",scope:!0,controller:"RoomsCtrl",controllerAs:"rooms",templateUrl:"ng/locations.html",resolve:DevCtrl.Common.Resolve,data:{title:"Locations"}}).state("rooms.room",{url:"/:name",templateUrl:"ng/room.html",controller:"RoomCtrl",controllerAs:"room",data:{listByName:"rooms",title:!1}}).state("endpoints",{url:"/devices",templateUrl:"ng/endpoints.html",resolve:DevCtrl.Common.Resolve,
data:{title:"Devices"}}).state("endpoints.endpoint",{url:"/:id",templateUrl:"ng/endpoint.html",controller:"EndpointCtrl",controllerAs:"endpoint",data:{listByName:"control_endpoints",title:!1}}).state("config",{url:"/config",scope:!0,templateUrl:"ng/config.html",resolve:DevCtrl.Common.Resolve,data:{title:"Configuration"}}).state("config.data",{url:"/data",templateUrl:"ng/data.html",data:{title:"Data Tables"}}).state("config.data.table",{url:"/:name",templateUrl:"ng/tableeditor.html",controller:"TableCtrl",
controllerAs:"table",resolve:DevCtrl.Table.Resolve,data:{title:"Table Editor"}});a.when("/","/rooms");e.html5Mode(!0)}]};DevCtrl.Common={};DevCtrl.Common.Resolve={loadControls:function(c){return c.getTablePromise("controls")},loadControlTemplates:function(c){return c.getTablePromise("control_templates")},loadRooms:function(c){return c.getTablePromise("rooms")},loadPanels:function(c){return c.getTablePromise("panels")},loadPanelControls:function(c){return c.getTablePromise("panel_controls")},loadEndpointTypes:function(c){return c.getTablePromise("endpoint_types")},loadControlEndpoints:function(c){return c.getTablePromise("control_endpoints")}};DevCtrl.ObjectEditor={};DevCtrl.ObjectEditor.Directive=[function(){return{scope:{object:"="},bindToController:!0,controller:function(){angular.isDefined(this.object)&&null!=this.object||(this.object={});this.addItem=function(c,e){angular.isDefined(this.newKey)&&angular.isDefined(this.newVal)&&(this.object[this.newKey]=this.newVal);this.newVal=this.newKey=void 0}},controllerAs:"obj",templateUrl:"ng/object-editor.html"}}];DevCtrl.Room={};
DevCtrl.Room.Ctrl=["$stateParams","DataService",function(c,e){var a=this;this.roomName=c.name;this.rooms=e.getTable("rooms");angular.forEach(this.rooms.listed,function(d){d.fields.name==a.roomName&&(a.obj=d,a.id=d.id)});this.panels=this.obj.referenced.panels;this.addPanel=function(d){e.editRecord(d,"0","panels",{room_id:a.id})};this.config=e.config;var b={};angular.isObject(this.config.rooms)||(this.config.rooms={});angular.isObject(this.config.rooms[a.id])||(this.config.rooms[this.id]={groups:{}});
b=this.config.rooms[this.id];this.getGroups=function(){var d={};angular.forEach(b.groups,function(a,b){d[b]=!0});angular.forEach(a.panels,function(a){angular.isDefined(b.groups[a.fields.grouping])||(b.groups[a.fields.grouping]={opened:!1});d[a.fields.grouping]=!1});angular.forEach(d,function(a,d){a&&delete b.groups[d]});return b.groups};this.panelControls=function(a){if(angular.isDefined(a.referenced.panel_controls))return a.referenced.panel_controls};this.toggleGroup=function(a){a.opened=!a.opened;
e.updateConfig()}}];DevCtrl.MainCtrl=["$state","$mdSidenav","DataService","MenuService",function(c,e,a,b){this.msg="Hello World!";this.tiles=[{img:"/images/orc.png"},{img:"/images/pict.png"},{img:"/images/sage.png"}];this.$state=c;this.schema=a.schema;this.menu=b;this.control_endpoints=a.getTable("control_endpoints");this.config=a.config;this.updateConfig=function(){a.updateConfig()};this.toggleSidenav=function(a){e(a).toggle()};this.go=function(a){angular.isString(a)?c.go(a):c.go(a.name,a.params)};this.dataModel=a.dataModel;
this.title="DevCtrl";this.top=!0}];DevCtrl.Menu={};DevCtrl.Menu.Directive=["MenuService","$state",function(c,e){return{scope:!0,bindToController:{},controller:function(a,b){this.service=a},controllerAs:"menu",templateUrl:"ng/menu.html"}}];DevCtrl.DataService={};
DevCtrl.DataService.factory=["$window","$http","$mdToast","$timeout","socketFactory","$mdDialog",function(c,e,a,b,d,h){var f={},k={},l=!1,q=e.get("schema.php").success(function(a){angular.isDefined(a.schema)&&angular.forEach(a.schema,function(a,b){var d=g.getSchema(b);angular.merge(d,a);angular.isDefined(d.foreign_keys)&&angular.forEach(d.foreign_keys,function(a,b){d.referenced[a]=b})});l=!0}).error(function(a){g.errorToast(a)}),m=io("https://devctrl.dwi.ufl.edu/");d=d({ioSocket:m});var p={},n={},
m={editEnabled:!0};if("undefined"!==typeof c.localStorage){var r=c.localStorage.config;angular.isString(r)?m=JSON.parse(r):c.localStorage.config=JSON.stringify(m)}var g={config:m,messenger:d,dataModel:f,schema:k,addRow:function(a){e.post("data.php",a).success(function(b){g.loadData(b);angular.forEach(a,function(b,d){"table"!=d&&(a[d]=null)})}).error(function(a){g.errorToast(a)})},deleteRow:function(a){e.delete("data.php/"+a.tableName+"/"+a.id).success(function(a){g.loadData(a)}).error(function(a){g.errorToast(a)})},
editRecord:function(a,b,d,c){"0"!==b?b=g.getRowRef(d,b):(b=g.getNewRowRef(d),angular.isObject(c)&&angular.merge(b.fields,c));h.show({targetEvent:a,locals:{obj:b},controller:DevCtrl.Record.Ctrl,controllerAs:"record",bindToController:!0,templateUrl:"ng/record.html",clickOutsideToClose:!0,hasBackdrop:!1})},editRecordClose:function(){h.hide()},errorToast:function(b){var d="An unknown error has occured";angular.isDefined(b.error)&&(d=b.error);a.show(a.simple().content(d))},getNewRowRef:function(a){var b=
{id:"0",referenced:{},tableName:a,fields:{}};a=g.getSchema(a);angular.forEach(a.fields,function(a,d){b.fields[d]=""});return b},getRowRef:function(a,b){if(!angular.isDefined(a))return console.error("error looking up record for undefined table"),{};if(!angular.isDefined(b)||null===b)return console.error("error looking up %s record for undefined key",a),{};var d=this.getTableRef(a);if(angular.isString(k[a].pk))return angular.isDefined(d.indexed[b])||(d.indexed[b]={fields:{},foreign:{},id:b,loaded:!1,
referenced:{},tableName:a},d.listed.push(d.indexed[b])),d.indexed[b];console.error("multi column keys not supported, table %s",a)},getMenu:function(){angular.isDefined(f.menu)||(f.menu={items:{}},e.get("menu.php").success(function(a){angular.isDefined(a.menu.items)?(console.log("test/menu.php loaded"),f.menu.items=a.menu.items):console.log("test/menu.php did not return a valid menu object")}).error(function(a){g.errorToast(a)}));return f.menu},getSchema:function(a){k.loaded||angular.isDefined(k[a])||
(k[a]={referenced:{},foreign_keys:{}});return k[a]},getTable:function(a){angular.isDefined(f[a])?angular.isDefined(n[a])||(n[a]=this.getTablePromise(a)):(this.getTableRef(a),n[a]=this.getTablePromise(a));return f[a]},getTablePromise:function(a){if(angular.isDefined(n[a]))return n[a];if(angular.isDefined(a))return e.get("data.php?table="+a).success(function(a){g.loadData(a)}).error(function(a){g.errorToast(a)});console.error("error: attempt to fetch undefined table!")},getTableRef:function(a){angular.isDefined(f[a])||
(f[a]={listed:[],indexed:{},loaded:!1});return f[a]},loadData:function(a){l?g.loadDataKernel(a):q=q.then(function(){g.loadDataKernel(a)})},loadDataKernel:function(a){angular.isDefined(a.update)&&angular.forEach(a.update,function(a,b){angular.forEach(a,function(a,d){var c=g.getRowRef(b,d);angular.merge(c.fields,a)})});angular.isDefined(a.add)&&angular.forEach(a.add,function(a,b){var d=g.getSchema(b),c=d.pk,e=d.foreign_keys;angular.forEach(a,function(a,d){if(angular.isString(c)){var h=g.getRowRef(b,
d);angular.merge(h.fields,a);h.loaded=!0;angular.forEach(e,function(a,d){if(null!==h.fields[d]){var c=g.getRowRef(a,h.fields[d]);angular.isDefined(c.referenced[b])||(c.referenced[b]={});c.referenced[b][h.id]=h;h.foreign[a]=c;h.foreign[d]=c}else h.foreign[a]=null,h.foreign[d]=null})}else console.error("Error loading %s, multi-keyed records not supported",b)})});angular.isDefined(a.delete)&&angular.forEach(a.delete,function(a,b){var d=g.getSchema(b).pk;angular.forEach(a,function(a,c){angular.isString(d)?
delete f[b].indexed[c]:angular.forEach(a,function(a,d){delete f[b].indexed[c][d]})});f[b].listed.length=0;angular.forEach(f[b].indexed,function(a,c){angular.isString(d)?f[b].listed.push(a):angular.forEach(a,function(a){f[b].listed.push(a)})})})},updateConfig:function(){"undefined"!==typeof c.localStorage&&(c.localStorage.config=JSON.stringify(g.config))},updateControlValue:function(a){angular.isDefined(p[a.id])&&b.cancel(p[a.id]);p[a.id]=b(function(a,b){var d="control.php/"+a.id;pendingDebounce=!1;
e.put(d,a.fields).success(function(a){b.loadData(a)}).error(function(a){b.errorToast(a)})},200,!0,a,g)},updateRow:function(a){e.put("data.php/"+a.tableName+"/"+a.id,a.fields).success(function(a){g.loadData(a)}).error(function(a){g.errorToast(a)})}};d.on("control-data",function(a){g.loadData(a)});return g}];DevCtrl.Slider2d={};
DevCtrl.Slider2d.Directive=["DataService",function(c){return{scope:{control:"="},bindToController:!0,controller:function(c){var a=this,b,d;this.xValue=function(c){angular.isDefined(c)?(b=c,a.control.ctrl.fields.value=b+","+d):this.setXYVals();return b};this.yValue=function(c){angular.isDefined(c)?(d=c,a.control.ctrl.fields.value=b+","+d):this.setXYVals();return d};this.setXYVals=function(){var c=a.control.ctrl.fields.value.split(",");b=angular.isDefined(c[0])?c[0]:0;b=parseInt(b);d=angular.isDefined(c[1])?
c[1]:0;d=parseInt(d)};this.setXYVals();this.updateValue=function(){c.updateControlValue(a.control.ctrl)}},controllerAs:"slider2d",templateUrl:"ng/controls/slider2d.html"}}];DevCtrl.EnumSelect={};
DevCtrl.EnumSelect.Directive=["DataService",function(c){return{scope:{tableName:"=table",field:"=",selectModel:"="},bindToController:!0,controller:function(c){this.enums=c.getTable("enums");this.enumVals=c.getTable("enum_vals");this.schema=c.getSchema(this.tableName);this.enumId=function(){var a=0,b=this.tableName+"."+this.field.name;angular.forEach(this.enums.indexed,function(d,c){d.fields.name==b&&(a=c)});return a};this.options=function(){var a=this.enumId(),b={};0<a&&(b=this.enums.indexed[a].referenced.enum_vals);return b}},
controllerAs:"enumSelect",templateUrl:"ng/enum-select.html"}}];DevCtrl.Ctrl={};
DevCtrl.Ctrl.Directive=["DataService",function(c){return{scope:{panelControl:"=",controlId:"="},bindToController:!0,controller:function(c){(this.panelContext=angular.isDefined(this.panelControl))?(this.ctrl=this.panelControl.foreign.controls,this.name=this.panelControl.fields.name):(this.ctrl=c.getTable("controls").indexed[this.controlId],this.name=this.ctrl.fields.name);this.ctrlName=function(){return this.panelContext?this.panelControl.fields.name:this.ctrl.fields.name};this.template=this.ctrl.foreign.control_templates;
this.config=function(a){if(angular.isObject(this.ctrl.fields.config)&&angular.isDefined(this.ctrl.fields.config[a]))return this.ctrl.fields.config[a];if(angular.isObject(this.template.fields.config)&&angular.isDefined(this.template.fields.config[a]))return this.template.fields.config[a]};this.intConfig=function(b){b=a.config(b);return parseInt(b)};this.appConfig=c.config;this.type=this.template.fields.usertype;this.enums=c.getTable("enums");this.enumVals=c.getTable("enum_vals");var a=this;this.normalizedValue=
function(){var b=a.ctrl.fields.value,d=a.template.fields.max,c=a.template.fields.min,b=b<c?c:b;return((b>d?d:b)+(0-c))*(d-c)/100};this.updateValue=function(){c.updateControlValue(a.ctrl)};this.selectMenuItem=function(b){a.ctrl.fields.value=b;a.updateValue()};this.selectOptions=function(){var b=a.ctrl.fields.enum_id,d={};0<b&&(d=a.enums.indexed[b].referenced.enum_vals);return d};this.editPanelControl=function(b){c.editRecord(b,a.panelControl.id,"panel_controls")};this.editControl=function(b){c.editRecord(b,
a.ctrl.id,"controls")};this.editTemplate=function(b){c.editRecord(b,a.template.id,"control_templates")}},controllerAs:"ctrl",templateUrl:"ng/ctrl.html"}}];DevCtrl.Record={};DevCtrl.Record.Ctrl=["DataService",function(c){this.newRow="0"===this.obj.id;this.schema=c.getSchema(this.obj.tableName);var e=this;this.addRow=function(){c.addRow(e.obj);c.editRecordClose()};this.deleteRow=function(){c.deleteRow(e.obj);c.editRecordClose()};this.updateRow=function(){c.updateRow(e.obj);c.editRecordClose()};this.cloneRow=function(){var a=angular.copy(e.obj);c.addRow(a);c.editRecordClose()};this.close=function(){c.editRecordClose()}}];DevCtrl.MenuService={};
DevCtrl.MenuService.factory=["$state","DataService",function(c,e){var a={pageTitle:function(){return c.current.title||c.params.name},parentState:function(){return c.get("^")},isFirstLevel:function(){return""===c.current.name||""===c.get("^").name},items:{},states:function(){return c.get()},menuItems:function(){var b=c.get();angular.forEach(b,function(b,e){""!=b.name&&(b.isOpened=c.includes(b),""==c.get("^",b).name&&(a.items[b.name]=b,angular.isDefined(b.substates)||(b.substates={})),angular.isDefined(b.data.title)&&
(b.title=b.data.title))});angular.forEach(b,function(b,h){if(""!=b.name){var f=c.get("^",b);if(angular.isDefined(a.items[f.name]))if(angular.isDefined(b.data.listByName)){var k=e.getTable(b.data.listByName).listed;angular.forEach(k,function(a){angular.isDefined(f.substates[a.id])?(f.substates[a.id].params.name=a.fields.name,f.substates[a.id].title=a.fields.name):f.substates[a.id]={name:b.name,params:{name:a.fields.name,id:a.id},title:a.fields.name}})}else a.items[f.name].substates[b.name]=b}});return a.items}};
return a}];DevCtrl.Endpoint={};
DevCtrl.Endpoint.Ctrl=["$stateParams","DataService",function(c,e){var a=this;this.endpointId=c.id;this.endpoints=e.getTable("control_endpoints");this.obj=this.endpoints.indexed[this.endpointId];c.name=this.obj.fields.name;this.controls=this.obj.referenced.controls;this.togglePanel=function(a){angular.isDefined(a.opened)?a.opened=!a.opened:a.opened=!0};this.isPanelOpen=function(a){return angular.isDefined(a.opened)&&a.opened};this.addTemplate=function(b){e.editRecord(b,"0","control_templates",{endpoint_type_id:a.obj.fields.endpoint_type_id})}}];DevCtrl.PanelControlSelector={};DevCtrl.PanelControlSelector.Resolve={};
DevCtrl.PanelControlSelector.Ctrl=["$mdDialog","DataService",function(c,e){var a=this;this.endpointTypes=e.getTable("endpoint_types");this.endpoints=e.getTable("control_endpoints");this.controls=e.getTable("controls");this.control_templates=e.getTable("control_templates");this.newPanelControl=e.getNewRowRef("panel_controls");this.newPanelControl.fields.panel_id=this.panelId;this.endpointTypesSelected=[];this.endpointsSelected=[];this.getEndpointTypes=function(){return this.endpointTypes.indexed};
this.getEndpoints=function(){return this.endpoints.indexed};this.controlList={};this.getControls=function(){angular.forEach(a.controls.indexed,function(b){var c=!1,e=!0;if(angular.isArray(a.endpointsSelected)&&0<a.endpointsSelected.length){var e=!1,f=b.fields.control_endpoint_id;angular.forEach(a.endpointsSelected,function(a){a==f&&(c=!0)})}else if(angular.isArray(a.endpointTypesSelected)&&0<a.endpointTypesSelected.length){var e=!1,k=b.foreign.control_endpoints.fields.endpoint_type_id;angular.forEach(a.endpointTypesSelected,
function(a){k==a&&(c=!0)})}c||e?a.controlList[b.id]=b:delete a.controlList[b.id]});return a.controlList};this.endpointList={};this.getEndpoints=function(){angular.forEach(a.endpoints.indexed,function(b){var c=!1,e=!0;if(angular.isArray(a.endpointTypesSelected)&&0<a.endpointTypesSelected.length){var e=!1,f=b.fields.endpoint_type_id;angular.forEach(a.endpointTypesSelected,function(a){f==a&&(c=!0)})}c||e?a.endpointList[b.id]=b:delete a.endpointList[b.id]});return a.endpointList};this.clearEndpointTypes=
function(){a.endpointTypesSelected=void 0};this.clearEndpoints=function(){a.endpointsSelected=void 0};this.addPanelControl=function(){e.addRow(a.newPanelControl);c.hide()};this.cancelAdd=function(){c.hide()}}];DevCtrl.FkSelect={};DevCtrl.FkSelect.Directive=["DataService",function(c){return{scope:{tableName:"=table",field:"=",selectModel:"="},bindToController:!0,controller:function(c){this.options=c.getTable(this.tableName);this.schema=c.getSchema(this.tableName)},controllerAs:"fkSelect",templateUrl:"ng/fk-select.html"}}];DevCtrl.Table={};
DevCtrl.Table.Ctrl=["$scope","$stateParams","DataService",function(c,e,a){var b=this;this.tableName=e.name;this.data=a.getTable(this.tableName);this.schema=a.getSchema(this.tableName);this.newRow={table:this.tableName};a.messenger.emit("status-update",{message:"table "+this.tableName+" loaded"});this.sortColumn="id";this.sortReversed=!1;this.setSortColumn=function(a){"fields."+a.name===this.sortColumn?this.sortReversed=!this.sortReversed:(this.sortColumn="fields."+a.name,this.sortReversed=!1)};this.deleteRow=
function(b){b.table=this.tableName;a.deleteRow(b)};this.fkDisplayVal=function(b,c){var e=a.getSchema(this.schema.foreign_keys[b.name]);if(!angular.isDefined(c.foreign[b.name]))return"";var k=c.foreign[b.name];if(null==k)return"NULL";var l=k.id;angular.isDefined(k.fields[e.fk_name])&&(l=k.fields[e.fk_name]);return l};this.addRow=function(c){a.editRecord(c,"0",b.tableName)};this.openRecord=function(c,e){a.editRecord(c,e,b.tableName)};this.updateRow=function(b,c){a.updateRow(c)}}];
DevCtrl.Table.Resolve={tableName:["$stateParams",function(c){return c.table}]};DevCtrl.Rooms={};DevCtrl.Rooms.Ctrl=["DataService",function(c){this.list=c.getTable("rooms").listed;this.imageUrl=function(c){return"/images/"+c.fields.name+".png"}}];DevCtrl.Panel={};
DevCtrl.Panel.Directive=["$mdDialog","DataService",function(c,e){return{scope:!0,bindToController:{panelObj:"="},controller:function(a,b){this.fields=this.panelObj.fields;this.pcontrols=this.panelObj.referenced.panel_controls;this.appConfig=b.config;this.addControl=function(b){a.show({targetEvent:b,locals:{panelId:this.panelObj.id},controller:DevCtrl.PanelControlSelector.Ctrl,controllerAs:"selector",bindToController:!0,templateUrl:"ng/panel-control-selector.html",clickOutsideToClose:!0,hasBackdrop:!1})};
this.editPanel=function(a){b.editRecord(a,this.panelObj.id,this.panelObj.tableName)}},controllerAs:"panel",templateUrl:"ng/panel.html"}}];DevCtrl.App=angular.module("DevCtrlApp",["ui.router","ngMaterial","btford.socket-io","angular-toArrayFilter"]).factory("DataService",DevCtrl.DataService.factory).factory("MenuService",DevCtrl.MenuService.factory).directive("ctrl",DevCtrl.Ctrl.Directive).directive("coeMenu",DevCtrl.Menu.Directive).directive("devctrlPanel",DevCtrl.Panel.Directive).directive("fkSelect",DevCtrl.FkSelect.Directive).directive("enumSelect",DevCtrl.EnumSelect.Directive).directive("devctrlSlider2d",DevCtrl.Slider2d.Directive).directive("devctrlObjectEditor",
DevCtrl.ObjectEditor.Directive).controller("MainCtrl",DevCtrl.MainCtrl).controller("PanelControlSelectorCtrl",DevCtrl.PanelControlSelector.Ctrl).controller("EndpointCtrl",DevCtrl.Endpoint.Ctrl).controller("TableCtrl",DevCtrl.Table.Ctrl).controller("RecordCtrl",DevCtrl.Record.Ctrl).controller("RoomCtrl",DevCtrl.Room.Ctrl).controller("RoomsCtrl",DevCtrl.Rooms.Ctrl).config(DevCtrl.stateConfig).run(["$rootScope",function(c){c.$on("$stateChangeStart",function(c,a,b,d,h){console.log("$stateChangeStart to "+
a.to+"- fired when the transition begins. toState,toParams : \n",a,b)});c.$on("$stateChangeError",function(c,a,b,d,h){console.log("$stateChangeError - fired when an error occurs during transition.");console.log(arguments)});c.$on("$stateChangeSuccess",function(c,a,b,d,h){console.log("$stateChangeSuccess to "+a.name+"- fired once the state transition is complete.")});c.$on("$viewContentLoaded",function(c){console.log("$viewContentLoaded - fired after dom rendered",c)});c.$on("$stateNotFound",function(c,
a,b,d){console.log("$stateNotFound "+a.to+"  - fired when a state cannot be found by its name.");console.log(a,b,d)})}]);
