var DevCtrl={stateConfig:["$stateProvider","$locationProvider","$urlRouterProvider",function(b,d,c){b.state("rooms",{url:"/rooms",scope:!0,controller:"RoomsCtrl",controllerAs:"rooms",templateUrl:"ng/locations.html",resolve:DevCtrl.Common.Resolve,data:{title:"Locations"}}).state("rooms.room",{url:"/:name",templateUrl:"ng/room.html",controller:"RoomCtrl",controllerAs:"room",data:{listByName:"rooms",title:!1}}).state("endpoints",{url:"/devices",templateUrl:"ng/endpoints.html",resolve:DevCtrl.Common.Resolve,
data:{title:"Devices"}}).state("endpoints.endpoint",{url:"/:id",templateUrl:"ng/endpoint.html",controller:"EndpointCtrl",controllerAs:"endpoint",data:{listByName:"control_endpoints",title:!1}}).state("config",{url:"/config",scope:!0,templateUrl:"ng/config.html",resolve:DevCtrl.Common.Resolve,data:{title:"Configuration"}}).state("config.data",{url:"/data",templateUrl:"ng/data.html",data:{title:"Data Tables"}}).state("config.data.table",{url:"/:name",templateUrl:"ng/tableeditor.html",controller:"TableCtrl",
controllerAs:"table",resolve:DevCtrl.Table.Resolve,data:{title:"Table Editor"}});c.when("/","/rooms");d.html5Mode(!0)}]};DevCtrl.Common={};DevCtrl.Common.Resolve={loadControls:function(b){return b.getTablePromise("controls")},loadControlTemplates:function(b){return b.getTablePromise("control_templates")},loadRooms:function(b){return b.getTablePromise("rooms")},loadPanels:function(b){return b.getTablePromise("panels")},loadPanelControls:function(b){return b.getTablePromise("panel_controls")},loadEndpointTypes:function(b){return b.getTablePromise("endpoint_types")},loadControlEndpoints:function(b){return b.getTablePromise("control_endpoints")}};DevCtrl.ObjectEditor={};DevCtrl.ObjectEditor.Directive=[function(){return{scope:{object:"="},bindToController:!0,controller:function(){angular.isDefined(this.object)&&null!=this.object||(this.object={});this.addItem=function(b,d){angular.isDefined(this.newKey)&&angular.isDefined(this.newVal)&&(this.object[this.newKey]=this.newVal);this.newVal=this.newKey=void 0}},controllerAs:"obj",templateUrl:"ng/object-editor.html"}}];DevCtrl.Room={};
DevCtrl.Room.Ctrl=["$stateParams","DataService",function(b,d){var c=this;this.roomName=b.name;this.rooms=d.getTable("rooms");angular.forEach(this.rooms.listed,function(a){a.fields.name==c.roomName&&(c.obj=a,c.id=a.id)});this.panels=this.obj.referenced.panels;this.openedGroup="";this.groups=[];this.getGroups=function(){angular.forEach(c.panels,function(a){-1==c.groups.indexOf(a.fields.grouping)&&c.groups.push(a.fields.grouping)});return c.groups};this.panelControls=function(a){if(angular.isDefined(a.referenced.panel_controls))return a.referenced.panel_controls};this.toggleGroup=
function(a){this.openedGroup=a==this.openedGroup?"":a};this.isGroupOpen=function(a){return a==this.openedGroup}}];DevCtrl.MainCtrl=["$state","$mdSidenav","DataService","MenuService",function(b,d,c,a){this.msg="Hello World!";this.tiles=[{img:"/images/orc.png"},{img:"/images/pict.png"},{img:"/images/sage.png"}];this.$state=b;this.schema=c.schema;this.menu=a;this.control_endpoints=c.getTable("control_endpoints");this.config=c.config;this.toggleSidenav=function(a){d(a).toggle()};this.go=function(a){angular.isString(a)?b.go(a):b.go(a.name,a.params)};this.dataModel=c.dataModel;this.title="DevCtrl";this.top=!0}];DevCtrl.Menu={};DevCtrl.Menu.Directive=["MenuService","$state",function(b,d){return{scope:!0,bindToController:{},controller:function(c,a){this.service=c},controllerAs:"menu",templateUrl:"ng/menu.html"}}];DevCtrl.DataService={};
DevCtrl.DataService.factory=["$http","$mdToast","$timeout","socketFactory","$mdDialog",function(b,d,c,a,e){var f={},h={},k=!1,l=b.get("schema.php").success(function(a){angular.isDefined(a.schema)&&angular.forEach(a.schema,function(a,c){var b=g.getSchema(c);angular.merge(b,a);angular.isDefined(b.foreign_keys)&&angular.forEach(b.foreign_keys,function(a,c){b.referenced[a]=c})});k=!0}).error(function(a){g.errorToast(a)}),p=io("https://devctrl.dwi.ufl.edu/");a=a({ioSocket:p});var n={},m={},g={config:{},
messenger:a,dataModel:f,schema:h,addRow:function(a){b.post("data.php",a).success(function(b){g.loadData(b);angular.forEach(a,function(b,c){"table"!=c&&(a[c]=null)})}).error(function(a){g.errorToast(a)})},deleteRow:function(a){b.delete("data.php/"+a.tableName+"/"+a.id).success(function(a){g.loadData(a)}).error(function(a){g.errorToast(a)})},editRecord:function(a,b,c,d){"0"!==b?b=g.getRowRef(c,b):(b=g.getNewRowRef(c),angular.isObject(d)&&angular.merge(b.fields,d));e.show({targetEvent:a,locals:{obj:b},
controller:DevCtrl.Record.Ctrl,controllerAs:"record",bindToController:!0,templateUrl:"ng/record.html",clickOutsideToClose:!0,hasBackdrop:!1})},editRecordClose:function(){e.hide()},errorToast:function(a){var b="An unknown error has occured";angular.isDefined(a.error)&&(b=a.error);d.show(d.simple().content(b))},getNewRowRef:function(a){var b={id:"0",referenced:{},tableName:a,fields:{}};a=g.getSchema(a);angular.forEach(a.fields,function(a,c){b.fields[c]=""});return b},getRowRef:function(a,b){if(!angular.isDefined(a))return console.error("error looking up record for undefined table"),
{};if(!angular.isDefined(b)||null===b)return console.error("error looking up %s record for undefined key",a),{};var c=this.getTableRef(a);if(angular.isString(h[a].pk))return angular.isDefined(c.indexed[b])||(c.indexed[b]={fields:{},foreign:{},id:b,loaded:!1,referenced:{},tableName:a},c.listed.push(c.indexed[b])),c.indexed[b];console.error("multi column keys not supported, table %s",a)},getMenu:function(){angular.isDefined(f.menu)||(f.menu={items:{}},b.get("menu.php").success(function(a){angular.isDefined(a.menu.items)?
(console.log("test/menu.php loaded"),f.menu.items=a.menu.items):console.log("test/menu.php did not return a valid menu object")}).error(function(a){g.errorToast(a)}));return f.menu},getSchema:function(a){h.loaded||angular.isDefined(h[a])||(h[a]={referenced:{},foreign_keys:{}});return h[a]},getTable:function(a){angular.isDefined(f[a])?angular.isDefined(m[a])||(m[a]=this.getTablePromise(a)):(this.getTableRef(a),m[a]=this.getTablePromise(a));return f[a]},getTablePromise:function(a){if(angular.isDefined(m[a]))return m[a];
if(angular.isDefined(a))return b.get("data.php?table="+a).success(function(a){g.loadData(a)}).error(function(a){g.errorToast(a)});console.error("error: attempt to fetch undefined table!")},getTableRef:function(a){angular.isDefined(f[a])||(f[a]={listed:[],indexed:{},loaded:!1});return f[a]},loadData:function(a){k?g.loadDataKernel(a):l=l.then(function(){g.loadDataKernel(a)})},loadDataKernel:function(a){angular.isDefined(a.update)&&angular.forEach(a.update,function(a,b){angular.forEach(a,function(a,
c){var e=g.getRowRef(b,c);angular.merge(e.fields,a)})});angular.isDefined(a.add)&&angular.forEach(a.add,function(a,b){var c=g.getSchema(b),e=c.pk,d=c.foreign_keys;angular.forEach(a,function(a,c){if(angular.isString(e)){var f=g.getRowRef(b,c);angular.merge(f.fields,a);f.loaded=!0;angular.forEach(d,function(a,c){if(null!==f.fields[c]){var e=g.getRowRef(a,f.fields[c]);angular.isDefined(e.referenced[b])||(e.referenced[b]={});e.referenced[b][f.id]=f;f.foreign[a]=e;f.foreign[c]=e}else f.foreign[a]=null,
f.foreign[c]=null})}else console.error("Error loading %s, multi-keyed records not supported",b)})});angular.isDefined(a.delete)&&angular.forEach(a.delete,function(a,b){var c=g.getSchema(b).pk;angular.forEach(a,function(a,e){angular.isString(c)?delete f[b].indexed[e]:angular.forEach(a,function(a,c){delete f[b].indexed[e][c]})});f[b].listed.length=0;angular.forEach(f[b].indexed,function(a,e){angular.isString(c)?f[b].listed.push(a):angular.forEach(a,function(a){f[b].listed.push(a)})})})},updateControlValue:function(a){angular.isDefined(n[a.id])&&
c.cancel(n[a.id]);n[a.id]=c(function(a,c){var e="control.php/"+a.id;pendingDebounce=!1;b.put(e,a.fields).success(function(a){c.loadData(a)}).error(function(a){c.errorToast(a)})},200,!0,a,g)},updateRow:function(a){b.put("data.php/"+a.tableName+"/"+a.id,a.fields).success(function(a){g.loadData(a)}).error(function(a){g.errorToast(a)})}};a.on("control-data",function(a){g.loadData(a)});return g}];DevCtrl.Slider2d={};
DevCtrl.Slider2d.Directive=["DataService",function(b){return{scope:{control:"="},bindToController:!0,controller:function(b){var c=this,a,e;this.xValue=function(b){angular.isDefined(b)?(a=b,c.control.ctrl.fields.value=a+","+e):this.setXYVals();return a};this.yValue=function(b){angular.isDefined(b)?(e=b,c.control.ctrl.fields.value=a+","+e):this.setXYVals();return e};this.setXYVals=function(){var b=c.control.ctrl.fields.value.split(",");a=angular.isDefined(b[0])?b[0]:0;a=parseInt(a);e=angular.isDefined(b[1])?
b[1]:0;e=parseInt(e)};this.setXYVals();this.updateValue=function(){b.updateControlValue(c.control.ctrl)}},controllerAs:"slider2d",templateUrl:"ng/controls/slider2d.html"}}];DevCtrl.EnumSelect={};
DevCtrl.EnumSelect.Directive=["DataService",function(b){return{scope:{tableName:"=table",field:"=",selectModel:"="},bindToController:!0,controller:function(b){this.enums=b.getTable("enums");this.enumVals=b.getTable("enum_vals");this.schema=b.getSchema(this.tableName);this.enumId=function(){var b=0,a=this.tableName+"."+this.field.name;angular.forEach(this.enums.indexed,function(e,d){e.fields.name==a&&(b=d)});return b};this.options=function(){var b=this.enumId(),a={};0<b&&(a=this.enums.indexed[b].referenced.enum_vals);return a}},
controllerAs:"enumSelect",templateUrl:"ng/enum-select.html"}}];DevCtrl.Ctrl={};
DevCtrl.Ctrl.Directive=["DataService",function(b){return{scope:{panelControl:"=",controlId:"="},bindToController:!0,controller:function(b){(this.panelContext=angular.isDefined(this.panelControl))?(this.ctrl=this.panelControl.foreign.controls,this.name=this.panelControl.fields.name):(this.ctrl=b.getTable("controls").indexed[this.controlId],this.name=this.ctrl.fields.name);this.ctrlName=function(){return this.panelContext?this.panelControl.fields.name:this.ctrl.fields.name};this.template=this.ctrl.foreign.control_templates;
this.config=function(a){if(angular.isObject(this.ctrl.fields.config)&&angular.isDefined(this.ctrl.fields.config[a]))return this.ctrl.fields.config[a];if(angular.isObject(this.template.fields.config)&&angular.isDefined(this.template.fields.config[a]))return this.template.fields.config[a]};this.intConfig=function(a){a=c.config(a);return parseInt(a)};this.appConfig=b.config;this.type=this.template.fields.usertype;this.enums=b.getTable("enums");this.enumVals=b.getTable("enum_vals");var c=this;this.normalizedValue=
function(){var a=c.ctrl.fields.value,b=c.template.fields.max,d=c.template.fields.min,a=a<d?d:a;return((a>b?b:a)+(0-d))*(b-d)/100};this.updateValue=function(){b.updateControlValue(c.ctrl)};this.selectMenuItem=function(a){c.ctrl.fields.value=a;c.updateValue()};this.selectOptions=function(){var a=c.ctrl.fields.enum_id,b={};0<a&&(b=c.enums.indexed[a].referenced.enum_vals);return b};this.editPanelControl=function(a){b.editRecord(a,c.panelControl.id,"panel_controls")};this.editControl=function(a){b.editRecord(a,
c.controlId,"controls")};this.editTemplate=function(a){b.editRecord(a,c.template.id,"control_templates")}},controllerAs:"ctrl",templateUrl:"ng/ctrl.html"}}];DevCtrl.Record={};DevCtrl.Record.Ctrl=["DataService",function(b){this.newRow="0"===this.obj.id;this.schema=b.getSchema(this.obj.tableName);var d=this;this.addRow=function(){b.addRow(d.obj);b.editRecordClose()};this.deleteRow=function(){b.deleteRow(d.obj);b.editRecordClose()};this.updateRow=function(){b.updateRow(d.obj);b.editRecordClose()};this.cloneRow=function(){var c=angular.copy(d.obj);b.addRow(c);b.editRecordClose()};this.close=function(){b.editRecordClose()}}];DevCtrl.MenuService={};
DevCtrl.MenuService.factory=["$state","DataService",function(b,d){var c={pageTitle:function(){return b.current.title||b.params.name},parentState:function(){return b.get("^")},isFirstLevel:function(){return""===b.current.name||""===b.get("^").name},items:{},states:function(){return b.get()},menuItems:function(){var a=b.get();angular.forEach(a,function(a,d){""!=a.name&&(a.isOpened=b.includes(a),""==b.get("^",a).name&&(c.items[a.name]=a,angular.isDefined(a.substates)||(a.substates={})),angular.isDefined(a.data.title)&&
(a.title=a.data.title))});angular.forEach(a,function(a,f){if(""!=a.name){var h=b.get("^",a);if(angular.isDefined(c.items[h.name]))if(angular.isDefined(a.data.listByName)){var k=d.getTable(a.data.listByName).listed;angular.forEach(k,function(b){angular.isDefined(h.substates[b.id])?(h.substates[b.id].params.name=b.fields.name,h.substates[b.id].title=b.fields.name):h.substates[b.id]={name:a.name,params:{name:b.fields.name,id:b.id},title:b.fields.name}})}else c.items[h.name].substates[a.name]=a}});return c.items}};
return c}];DevCtrl.Endpoint={};
DevCtrl.Endpoint.Ctrl=["$stateParams","DataService",function(b,d){var c=this;this.endpointId=b.id;this.endpoints=d.getTable("control_endpoints");this.obj=this.endpoints.indexed[this.endpointId];b.name=this.obj.fields.name;this.controls=this.obj.referenced.controls;this.togglePanel=function(a){angular.isDefined(a.opened)?a.opened=!a.opened:a.opened=!0};this.isPanelOpen=function(a){return angular.isDefined(a.opened)&&a.opened};this.addTemplate=function(a){d.editRecord(a,"0","control_templates",{endpoint_type_id:c.obj.fields.endpoint_type_id})}}];DevCtrl.FkSelect={};DevCtrl.FkSelect.Directive=["DataService",function(b){return{scope:{tableName:"=table",field:"=",selectModel:"="},bindToController:!0,controller:function(b){this.options=b.getTable(this.tableName);this.schema=b.getSchema(this.tableName)},controllerAs:"fkSelect",templateUrl:"ng/fk-select.html"}}];DevCtrl.Table={};
DevCtrl.Table.Ctrl=["$scope","$stateParams","DataService",function(b,d,c){var a=this;this.tableName=d.name;this.data=c.getTable(this.tableName);this.schema=c.getSchema(this.tableName);this.newRow={table:this.tableName};c.messenger.emit("status-update",{message:"table "+this.tableName+" loaded"});this.sortColumn="id";this.sortReversed=!1;this.setSortColumn=function(a){"fields."+a.name===this.sortColumn?this.sortReversed=!this.sortReversed:(this.sortColumn="fields."+a.name,this.sortReversed=!1)};this.deleteRow=
function(a){a.table=this.tableName;c.deleteRow(a)};this.fkDisplayVal=function(a,b){var d=c.getSchema(this.schema.foreign_keys[a.name]);if(!angular.isDefined(b.foreign[a.name]))return"";var k=b.foreign[a.name];if(null==k)return"NULL";var l=k.id;angular.isDefined(k.fields[d.fk_name])&&(l=k.fields[d.fk_name]);return l};this.addRow=function(b){c.editRecord(b,"0",a.tableName)};this.openRecord=function(b,d){c.editRecord(b,d,a.tableName)};this.updateRow=function(a,b){c.updateRow(b)}}];
DevCtrl.Table.Resolve={tableName:["$stateParams",function(b){return b.table}]};DevCtrl.ControlSelector={};DevCtrl.ControlSelector.Resolve={};
DevCtrl.ControlSelector.Ctrl=["DataService",function(b){var d=this;this.endpointTypes=b.getTable("endpoint_types");this.endpoints=b.getTable("endpoint_types");this.controls=b.getTable("controls");this.control_templates=b.getTable("control_templates");this.getEndpointTypes=function(){return this.endpointTypes.indexed};this.getEndpoints=function(){return this.endpoints.indexed};this.controlList={};this.getControls=function(){angular.forEach(d.controls.indexed,function(b){var a=!1,e=!0;if(angular.isArray(d.endpointTypesSelected)){var e=
!1,f=b.foreign.control_endpoints.id;angular.forEach(d.endpointTypesSelected,function(b){f==b&&(a=!0)})}a||e?d.controlList[b.id]=b:delete d.controlList[b.id]});return d.controlList}}];DevCtrl.Rooms={};DevCtrl.Rooms.Ctrl=["DataService",function(b){this.list=b.getTable("rooms").listed;this.imageUrl=function(b){return"/images/"+b.fields.name+".png"}}];DevCtrl.Panel={};
DevCtrl.Panel.Directive=["$mdDialog","DataService",function(b,d){return{scope:!0,bindToController:{panelObj:"="},controller:function(b,a){this.fields=this.panelObj.fields;this.pcontrols=this.panelObj.referenced.panel_controls;this.appConfig=a.config;this.addControl=function(a){b.show({targetEvent:a,locals:{obj:""},controller:DevCtrl.ControlSelector.Ctrl,controllerAs:"selector",bindToController:!0,templateUrl:"ng/control-selector.html",clickOutsideToClose:!0,hasBackdrop:!1})}},controllerAs:"panel",templateUrl:"ng/panel.html"}}];DevCtrl.App=angular.module("DevCtrlApp",["ui.router","ngMaterial","btford.socket-io","angular-toArrayFilter"]).factory("DataService",DevCtrl.DataService.factory).factory("MenuService",DevCtrl.MenuService.factory).directive("ctrl",DevCtrl.Ctrl.Directive).directive("coeMenu",DevCtrl.Menu.Directive).directive("devctrlPanel",DevCtrl.Panel.Directive).directive("fkSelect",DevCtrl.FkSelect.Directive).directive("enumSelect",DevCtrl.EnumSelect.Directive).directive("devctrlSlider2d",DevCtrl.Slider2d.Directive).directive("devctrlObjectEditor",
DevCtrl.ObjectEditor.Directive).controller("MainCtrl",DevCtrl.MainCtrl).controller("ControlSelectorCtrl",DevCtrl.ControlSelector.Ctrl).controller("EndpointCtrl",DevCtrl.Endpoint.Ctrl).controller("TableCtrl",DevCtrl.Table.Ctrl).controller("RecordCtrl",DevCtrl.Record.Ctrl).controller("RoomCtrl",DevCtrl.Room.Ctrl).controller("RoomsCtrl",DevCtrl.Rooms.Ctrl).config(DevCtrl.stateConfig).run(["$rootScope",function(b){b.$on("$stateChangeStart",function(b,c,a,e,f){console.log("$stateChangeStart to "+c.to+
"- fired when the transition begins. toState,toParams : \n",c,a)});b.$on("$stateChangeError",function(b,c,a,e,f){console.log("$stateChangeError - fired when an error occurs during transition.");console.log(arguments)});b.$on("$stateChangeSuccess",function(b,c,a,e,f){console.log("$stateChangeSuccess to "+c.name+"- fired once the state transition is complete.")});b.$on("$viewContentLoaded",function(b){console.log("$viewContentLoaded - fired after dom rendered",b)});b.$on("$stateNotFound",function(b,
c,a,e){console.log("$stateNotFound "+c.to+"  - fired when a state cannot be found by its name.");console.log(c,a,e)})}]);
