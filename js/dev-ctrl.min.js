var DevCtrl={stateConfig:["$stateProvider","$locationProvider","$urlRouterProvider",function(b,c,a){b.state("rooms",{url:"/rooms",scope:!0,controller:"RoomsCtrl",controllerAs:"rooms",templateUrl:"ng/locations.html",resolve:DevCtrl.Common.Resolve,data:{title:"Locations"}}).state("rooms.room",{url:"/:name",templateUrl:"ng/room.html",controller:"RoomCtrl",controllerAs:"room",data:{listByName:"rooms",title:!1}}).state("endpoints",{url:"/devices",templateUrl:"ng/endpoints.html",resolve:DevCtrl.Common.Resolve,
data:{title:"Devices"}}).state("endpoints.endpoint",{url:"/:id",templateUrl:"ng/endpoint.html",controller:"EndpointCtrl",controllerAs:"endpoint",data:{listByName:"endpoints",title:!1}}).state("config",{url:"/config",scope:!0,templateUrl:"ng/config.html",resolve:DevCtrl.Common.Resolve,data:{title:"Configuration"}}).state("config.data",{url:"/data",templateUrl:"ng/data.html",data:{title:"Data Tables"}}).state("config.log",{url:"/log",templateUrl:"ng/log.html",controller:"LogCtrl",controllerAs:"log",
resolve:DevCtrl.Log.Resolve,data:{title:"Log Viewer"}}).state("config.data.table",{url:"/:name",templateUrl:"ng/tableeditor.html",controller:"TableCtrl",controllerAs:"table",resolve:DevCtrl.Table.Resolve,data:{title:"Table Editor"}});a.when("/","/rooms");c.html5Mode(!0)}]};DevCtrl.Common={};
DevCtrl.Common.Resolve={resetToolbar:function(b){b.toolbarSelect.enable=!1},loadSchema:function(b){console.log("loadSchema called");return b.getSchemaPromise()},loadClients:function(b){return b.getTablePromise("clients")},loadControls:function(b){return b.getTablePromise("controls")},loadRooms:function(b){return b.getTablePromise("rooms")},loadPanels:function(b){return b.getTablePromise("panels")},loadPanelControls:function(b){return b.getTablePromise("panel_controls")},loadEndpointTypes:function(b){return b.getTablePromise("endpoint_types")},loadControlEndpoints:function(b){return b.getTablePromise("endpoints")},
loadUserInfo:function(b){return b.getAdminAuth()}};DevCtrl.ObjectEditor={};DevCtrl.ObjectEditor.Directive=[function(){return{scope:{object:"="},bindToController:!0,controller:function(){if(!angular.isDefined(this.object)||null==this.object||angular.isArray(this.object))this.object={};this.addItem=function(b,c){angular.isDefined(this.newKey)&&angular.isDefined(this.newVal)&&(this.object[this.newKey]=this.newVal);this.newVal=this.newKey=void 0;angular.element("#oe-new-key").focus()}},controllerAs:"obj",templateUrl:"ng/object-editor.html"}}];DevCtrl.Room={};
DevCtrl.Room.Ctrl=["$stateParams","DataService","MenuService",function(b,c,a){var d=this;this.menu=a;this.rooms=c.getTable("rooms");angular.isDefined(this.rooms.indexed[b.id])?(this.obj=this.rooms.indexed[b.id],this.id=b.id,b.name=this.obj.fields.name):angular.forEach(this.rooms.listed,function(a){a.fields.name==b.name&&(d.obj=a,d.id=a.id)});this.menu.toolbarSelectTable("rooms","rooms.room",d.id);this.panels=this.obj.referenced.panels;this.addPanel=function(a){c.editRecord(a,"0","panels",{room_id:d.id})};
this.config=c.config;var e={};angular.isObject(this.config.rooms)||(this.config.rooms={});angular.isObject(this.config.rooms[d.id])||(this.config.rooms[this.id]={groups:{}});e=this.config.rooms[this.id];this.getGroups=function(){var a={};angular.forEach(e.groups,function(b,e){a[e]=!0});angular.forEach(d.panels,function(b){angular.isDefined(e.groups[b.fields.grouping])||(e.groups[b.fields.grouping]={opened:!1});a[b.fields.grouping]=!1});angular.forEach(a,function(a,b){a&&delete e.groups[b]});return e.groups};
this.getRoomEndpoints=function(a){var b={},e=!angular.isDefined(a);angular.forEach(d.obj.referenced.panels,function(c,d){(e||c.fields.grouping==a)&&angular.forEach(c.referenced.panel_controls,function(a,e){var c=a.foreign.controls.foreign.endpoints;angular.isDefined(b[c.id])||(b[c.id]=c)})});return b};this.panelControls=function(a){if(angular.isDefined(a.referenced.panel_controls))return a.referenced.panel_controls};this.toggleGroup=function(a){a.opened=!a.opened;c.updateConfig()}}];DevCtrl.MainCtrl=["$state","$mdMedia","DataService","MenuService",function(b,c,a,d){this.msg="Hello World!";this.tiles=[{img:"/images/orc.png"},{img:"/images/pict.png"},{img:"/images/sage.png"}];this.$state=b;this.schema=a.schema;this.menu=d;this.$mdMedia=c;this.endpoints=a.getTable("endpoints");this.config=a.config;this.user=a.dataModel.user;this.updateConfig=function(){a.updateConfig()};this.go=function(a){angular.isString(a)?b.go(a):b.go(a.name,a.params)};this.addEndpoint=function(b){a.editRecord(b,
"0","endpoints")};this.addEndpointType=function(b){a.editRecord(b,"0","endpoint_types")};this.dataModel=a.dataModel;this.title="DevCtrl";this.top=!0}];DevCtrl.CtrlLog={};DevCtrl.CtrlLog.Ctrl=["DataService",function(b){this.logs=this.ctrl.referenced.control_log;this.close=function(){b.dialogClose()}}];DevCtrl.Toolbar={};
DevCtrl.Toolbar.Directive=["$mdMedia","$state","MenuService","DataService",function(b,c,a,d){return{scope:!0,bindToController:{title:"="},controller:function(a,c,d){var l=this;this.menu=c;this.user=d.dataModel.user;this.config=d.config;this.$mdMedia=b;this.client=function(){return d.getRowRef("clients",l.user.client_id)};this.pageTitle=function(){return angular.isDefined(l.title)?l.title:a.current.title||a.params.name};this.adminLogin=function(){d.getAdminAuth(!0)};this.editClient=function(a){d.editRecord(a,
l.user.client_id,"clients")};this.revokeAdmin=function(){d.revokeAdminAuth()};this.updateConfig=function(){d.updateConfig()}},controllerAs:"toolbar",templateUrl:"ng/toolbar.html"}}];DevCtrl.AdminOnly={};DevCtrl.AdminOnly.Directive=["$compile","DataService",function(b,c){return{restrict:"A",replace:!1,terminal:!0,priority:1E3,link:function(a,d,e){var f=!1;"invert"==d.attr("devctrl-admin-only")&&(f=!0);d.removeAttr("devctrl-admin-only");d.attr("ng-if","adminEnabled()");a.adminEnabled=function(){var a=c.isAdminAuthorized()&&c.config.editEnabled;f&&(a=!a);return a};b(d)(a)}}}];DevCtrl.Menu={};DevCtrl.Menu.Directive=["MenuService","$state",function(b,c){return{scope:!0,bindToController:{},controller:function(a,b){this.service=a},controllerAs:"menu",templateUrl:"ng/menu.html"}}];DevCtrl.DataService={};
DevCtrl.DataService.factory=["$window","$http","$mdToast","$timeout","$q","socketFactory","$mdDialog","$location",function(b,c,a,d,e,f,k,l){var h={session:{username:null,auth:!1,admin_auth:!1,_id:0,admin_expiration:0},applog:[]},p={},q=!1,r=c.get("schema.php").success(function(a){angular.isDefined(a.schema)&&angular.forEach(a.schema,function(a,b){var u=g.getSchema(b);angular.merge(u,a);angular.isDefined(u.foreign_keys)&&angular.forEach(u.foreign_keys,function(a,b){u.referenced[a]=b})});q=!0}).error(function(a){g.errorToast(a)}),
t=io(l.protocol()+"://"+l.host()),m=f({ioSocket:t}),v={},n={};f={editEnabled:!0};"undefined"!==typeof b.localStorage&&(t=b.localStorage.config,angular.isString(t)?f=JSON.parse(t):b.localStorage.config=JSON.stringify(f));var g={config:f,messenger:m,dataModel:h,schema:p,addRow:function(a,b){var c={};c[a.tableName]=[a.fields];m.emit("add-data",c,function(c){if(c.error)g.errorToast(data);else{var d=Object.keys(c.data.add[a.tableName])[0];console.log("new record "+d+"added to "+a.tableName);g.loadData(c.data);
c=h[a.tableName].indexed[d];angular.forEach(a,function(b,c){"tableName"!=c&&(a[c]=null)});angular.isFunction(b)&&b(c)}})},dialogClose:function(){k.hide()},deleteRow:function(a){var b="api/data/"+a.tableName+"/"+a.id,d=!1;angular.forEach(a.referenced,function(a,b){0<Object.keys(a).length&&(d=b)});d?g.errorToast({error:"Cannot delete "+a.tableName+" record due to foreign key constraint on "+d}):c.delete(b).success(function(a){g.loadData(a)}).error(function(a){g.errorToast(a)})},editEnum:function(a,
b,c,d){angular.isObject(d)||(d={});k.show({targetEvent:a,locals:{myEnum:b,enumRefRecord:c,options:d},controller:DevCtrl.EnumEditor.Ctrl,controllerAs:"editor",bindToController:!0,templateUrl:"ng/enum-editor.html",clickOutsideToClose:!0,hasBackdrop:!1})},editRecord:function(a,b,c,d){"0"!==b?b=g.getRowRef(c,b):(b=g.getNewRowRef(c),angular.isObject(d)&&angular.merge(b.fields,d));k.show({targetEvent:a,locals:{obj:b},controller:DevCtrl.Record.Ctrl,controllerAs:"record",bindToController:!0,templateUrl:"ng/record.html",
clickOutsideToClose:!0,hasBackdrop:!1})},editRecordClose:function(){k.hide()},errorToast:function(b){var c="An unknown error has occured";angular.isDefined(b.error)&&(c=b.error);a.show({templateUrl:"ng/error-toast.html",locals:{message:c},controllerAs:"toast",controller:"RoomsCtrl",bindToController:!0,position:"top right",hideDelay:3E3})},getAdminAuth:function(a){var b="auth/admin_auth";a&&(b="admin_auth.php?location="+l.path());return c.get(b).then(function(a){angular.isDefined(a.data.user)?angular.merge(h.user,
a.data.user):console.log("admin_auth did not return an admin status")},function(b){"401"==b.status&&(a&&angular.isDefined(b.data.location)?window.location=b.data.location:(angular.isDefined(b.data.user)&&angular.merge(h.user,b.data.user),g.errorToast(b.data)))})},getLog:function(){return c.get("log.php").then(function(a){angular.isDefined(a.data.applog)&&(h.applog.length=0,angular.merge(h.applog,a.data.applog))})},getMData:function(a,b){var c={table:a,params:b};g.getMProm=e(function(a,b){m.emit("get-data",
c,function(b){console.log("data received:"+b);g.loadData(b);a(!0)})});return g.getMProm},getNewRowRef:function(a){var b={id:"0",referenced:{},tableName:a,fields:{}};a=g.getSchema(a);angular.forEach(a.fields,function(a,c){b.fields[a.name]=""});return b},getRowRef:function(a,b){if(!angular.isDefined(a))return console.error("error looking up record for undefined table"),{};if(!angular.isDefined(b)||null===b)return console.error("error looking up %s record for undefined key",a),{};var c=this.getTableRef(a);
angular.isDefined(c.indexed[b])||(c.indexed[b]={fields:{},foreign:{},id:b,loaded:!1,referenced:{},tableName:a},c.listed.push(c.indexed[b]));return c.indexed[b]},getMenu:function(){angular.isDefined(h.menu)||(h.menu={items:{}},c.get("menu.php").success(function(a){angular.isDefined(a.menu.items)?(console.log("test/menu.php loaded"),h.menu.items=a.menu.items):console.log("test/menu.php did not return a valid menu object")}).error(function(a){g.errorToast(a)}));return h.menu},getSchema:function(a){p.loaded||
angular.isDefined(p[a])||(p[a]={referenced:{},foreign_keys:{}});return p[a]},getSchemaPromise:function(){if(!q)return r},getTable:function(a){angular.isDefined(h[a])?angular.isDefined(n[a])||(n[a]=this.getTablePromise(a)):(this.getTableRef(a),n[a]=this.getTablePromise(a));return h[a]},getTablePromise:function(a){if(angular.isDefined(n[a]))return n[a];if(angular.isDefined(a))return n[a]=g.getMData(a,{}).then(function(){return q?h[a]:r.then(function(){return h[a]})},function(){g.errorToast("getMData "+
a+" problem")}),n[a];console.error("error: attempt to fetch undefined table!")},getTableRef:function(a){angular.isDefined(h[a])||(h[a]={listed:[],indexed:{},loaded:!1});return h[a]},guid:function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(a){var b=16*Math.random()|0;return("x"==a?b:b&3|8).toString(16)})},isAdminAuthorized:function(){return h.user.admin},loadControlUpdates:function(a){var b;for(b=0;b<a.length;b++){var c=a[b];if("observed"==c.status||"executed"==c.status)g.getRowRef("controls",
c.control_id).fields.value=c.value}},loadData:function(a){if(q)g.loadDataKernel(a);else return r=r.then(function(){g.loadDataKernel(a)})},loadDataKernel:function(a){angular.isDefined(a.update)&&(angular.isDefined(a.add)?angular.merge(a.add,a.update):a.add=a.update);angular.isDefined(a.add)&&angular.forEach(a.add,function(a,b){var c=g.getSchema(b).foreign_keys;angular.forEach(a,function(a,d){var e=g.getRowRef(b,d);angular.merge(e.fields,a);e.loaded=!0;angular.forEach(c,function(a,c){if(angular.isDefined(e.fields[c])&&
null!==e.fields[c]){var d=g.getRowRef(a,e.fields[c]);angular.isDefined(d.referenced[b])||(d.referenced[b]={});d.referenced[b][e.id]=e;e.foreign[a]=d;e.foreign[c]=d}else e.foreign[a]=null,e.foreign[c]=null})})});angular.isDefined(a.delete)&&angular.forEach(a.delete,function(a,b){angular.forEach(a,function(a,c){angular.forEach(h[b].indexed[c].foreign,function(a,d){angular.isDefined(a.referenced[b][c])&&delete a.referenced[b][c]});delete h[b].indexed[c]});h[b].listed.length=0;angular.forEach(h[b].indexed,
function(a,c){h[b].listed.push(a)})})},revokeAdminAuth:function(){c.get("admin_auth_revoke.php").then(function(a){angular.isDefined(a.data.user)?angular.merge(h.user,a.data.user):console.log("revoke admin_auth did not return user info")},function(a){g.errorToast(a.data)})},showControlLog:function(a,b){g.getMData("control_log",{control_id:b.id}).then(function(){k.show({targetEvent:a,locals:{ctrl:b},controller:DevCtrl.CtrlLog.Ctrl,controllerAs:"ctrlLog",bindToController:!0,templateUrl:"ng/ctrl-log.html",
clickOutsideToClose:!0,hasBackdrop:!1})})},updateConfig:function(){"undefined"!==typeof b.localStorage&&(b.localStorage.config=JSON.stringify(g.config))},updateControlValue:function(a){angular.isDefined(v[a.id])&&d.cancel(v[a.id]);v[a.id]=d(function(a,b){var c=[{_id:b.guid(),control_id:a.id,value:a.fields.value,type:"user",status:"requested",source:b.dataModel.client_id}];m.emit("control-updates",c)},200,!0,a,g)},updateRow:function(a){m.emit("update-data",{table:a.tableName,_id:a.id,set:a.fields},
function(a){console.log("data updated:"+a);g.loadData(a)})}};m.on("control-data",function(a){g.loadData(a)});m.on("control-updates",function(a){g.loadControlUpdates(a)});m.on("log-data",function(a){g.dataModel.applog.push(a)});return g}];DevCtrl.Slider2d={};
DevCtrl.Slider2d.Directive=["DataService",function(b){return{scope:{control:"="},bindToController:!0,controller:function(b){var a=this,d,e;this.xValue=function(b){angular.isDefined(b)?(d=b,a.control.ctrl.fields.value=d+","+e):this.setXYVals();return d};this.yValue=function(b){angular.isDefined(b)?(e=b,a.control.ctrl.fields.value=d+","+e):this.setXYVals();return e};this.setXYVals=function(){var b=a.control.ctrl.fields.value.split(",");d=angular.isDefined(b[0])?b[0]:0;d=parseInt(d);e=angular.isDefined(b[1])?
b[1]:0;e=parseInt(e)};this.setXYVals();this.updateValue=function(){b.updateControlValue(a.control.ctrl)}},controllerAs:"slider2d",templateUrl:"ng/controls/slider2d-directive.html"}}];DevCtrl.EnumSelect={};
DevCtrl.EnumSelect.Directive=["DataService",function(b){return{scope:{tableName:"=table",field:"=",selectModel:"="},bindToController:!0,controller:function(b){this.enums=b.getTable("enums");this.enumVals=b.getTable("enum_vals");this.schema=b.getSchema(this.tableName);this.enumId=function(){var a=0,b=this.tableName+"."+this.field.name;angular.forEach(this.enums.indexed,function(c,f){c.fields.name==b&&(a=f)});return a};this.options=function(){var a=this.enumId(),b={};0<a&&(b=this.enums.indexed[a].referenced.enum_vals);return b}},
controllerAs:"enumSelect",templateUrl:"ng/enum-select.html"}}];DevCtrl.Ctrl={};
DevCtrl.Ctrl.Directive=["DataService","MenuService",function(b,c){return{scope:{panelControl:"=",controlId:"="},bindToController:!0,controller:function(a,b){this.menu=b;(this.panelContext=angular.isDefined(this.panelControl))?(this.ctrl=this.panelControl.foreign.controls,this.name=this.panelControl.fields.name):(this.ctrl=a.getTable("controls").indexed[this.controlId],this.name=this.ctrl.fields.name);this.ctrlName=function(){return this.panelContext&&""!==this.panelControl.fields.name?this.panelControl.fields.name:
this.ctrl.fields.name};this.config=function(a){if(angular.isObject(this.ctrl.fields.config)&&angular.isDefined(this.ctrl.fields.config[a]))return this.ctrl.fields.config[a]};this.intConfig=function(a){a=c.config(a);return parseInt(a)};this.appConfig=a.config;this.type=this.ctrl.fields.usertype;this.enums=a.getTable("enums");this.enumVals=a.getTable("enum_vals");var c=this;this.normalizedValue=function(){var a=c.ctrl.fields.value,b=c.intConfig("max"),d=c.intConfig("min"),a=a<d?d:a;return((a>b?b:a)+
(0-d))*(b-d)/100};this.updateValue=function(b){a.updateControlValue(c.ctrl)};this.editOptions=function(b){a.editEnum(b,null,c.ctrl,{title:"Edit "+c.name+" options"})};this.selectMenuItem=function(a){c.ctrl.fields.value=a;c.updateValue()};this.selectOptions=function(){return angular.isDefined(c.ctrl.fields.config.options)?c.ctrl.fields.config.options:{}};this.selectValueName=function(){var a=c.selectOptions(),b=c.ctrl.fields.value,d="";angular.forEach(a,function(a){a.fields.value==b&&(d=a.fields.name)});
return d};this.showLog=function(b){a.showControlLog(b,c.ctrl)};this.editPanelControl=function(b){a.editRecord(b,c.panelControl.id,"panel_controls")};this.editControl=function(b){a.editRecord(b,c.ctrl.id,"controls")}},controllerAs:"ctrl",templateUrl:"ng/ctrl.html"}}];DevCtrl.Record={};
DevCtrl.Record.Ctrl=["DataService",function(b){this.newRow="0"===this.obj.id;this.schema=b.getSchema(this.obj.tableName);this.editStack=[];var c=this;this.addRow=function(){b.addRow(c.obj);c.close(!0)};this.deleteRow=function(){b.deleteRow(c.obj);c.close(!0)};this.editOtherRow=function(a){c.editStack.push(c.obj);c.obj=a;c.schema=b.getSchema(a.tableName)};this.updateRow=function(){b.updateRow(c.obj);c.close(!0)};this.cloneRow=function(){var a=b.getNewRowRef(c.obj.tableName);a.fields=c.obj.fields;b.addRow(a,
function(a){c.obj=a;angular.isDefined(c.obj.fields.name)&&(c.obj.fields.name="")})};this.close=function(a){a&&0<c.editStack.length?(c.obj=c.editStack.pop(),c.schema=b.getSchema(c.obj.tableName)):b.editRecordClose()}}];DevCtrl.Log={};DevCtrl.Log.Ctrl=["DataService",function(b){this.applog=b.dataModel.applog}];DevCtrl.Log.Resolve={loadLog:["DataService",function(b){return b.getLog()}]};DevCtrl.MenuService={};
DevCtrl.MenuService.factory=["$state","$mdSidenav","$mdMedia","DataService",function(b,c,a,d){var e={sidenavOpen:!1};angular.isObject(d.config.menu)?e=d.config.menu:d.config.menu=e;var f={enabled:!1},k={toolbarSelect:f,toolbarSelectTable:function(a,b,c){var e=d.getTable(a);f.options=e.listed.map(function(a){return{value:a.id,name:a.fields.name}});f.tableName=a;f.destState=b;f.selected=c;f.enabled=!0},toolbarSelectUpdate:function(){var a=d.getRowRef(f.tableName,f.selected);k.go({name:f.destState,params:{id:f.selected,
name:a.fields.name}})},backgroundImageStyle:function(){return angular.isDefined(b.current.name)&&angular.isDefined(b.params.name)?{"background-image":"url(/images/backgrounds/"+b.current.name+"/"+b.params.name+".jpg)"}:{}},go:function(a){angular.isString(a)?b.go(a):b.go(a.name,a.params)},pageTitle:function(){return b.current.title||b.params.name},parentState:function(){return b.get("^")},isFirstLevel:function(){return""===b.current.name||""===b.get("^").name},items:{},states:function(){return b.get()},
menuItems:function(){var a=b.get();angular.forEach(a,function(a,c){""!=a.name&&(a.isOpened=b.includes(a),""==b.get("^",a).name&&(k.items[a.name]=a,angular.isDefined(a.substates)||(a.substates={})),angular.isDefined(a.data.title)&&(a.title=a.data.title))});angular.forEach(a,function(a,c){if(""!=a.name){var e=b.get("^",a);if(angular.isDefined(k.items[e.name]))if(angular.isDefined(a.data.listByName)){var f=d.getTable(a.data.listByName).listed;angular.forEach(f,function(b){angular.isDefined(e.substates[b.id])?
(e.substates[b.id].params.name=b.fields.name,e.substates[b.id].title=b.fields.name):e.substates[b.id]={name:a.name,params:{name:b.fields.name,id:b.id},title:b.fields.name}})}else k.items[e.name].substates[a.name]=a}});return k.items},hideSidenavButton:function(){return k.narrowMode()?!1:e.sidenavOpen},isSidenavOpen:function(){return e.sidenavOpen},toggleSidenav:function(a){angular.isDefined(e.sidenavOpen)||(e.sidenavOpen=!1);e.sidenavOpen=!e.sidenavOpen;d.updateConfig();k.narrowMode()&&c(a).toggle()},
narrowMode:function(){return a("max-width: 1000px")}};return k}];DevCtrl.EndpointStatus={};
DevCtrl.EndpointStatus.Directive=["DataService",function(b){return{scope:{endpointId:"="},bindToController:!0,controller:function(b){var a=this;this.endpoint=b.getRowRef("endpoints",this.endpointId);this.status=function(){return a.endpoint.fields.enabled?""==a.endpoint.fields.status||null==a.endpoint.fields.status?"unknown":a.endpoint.fields.status:"disabled"};this.statusIcon=function(){var b=a.status();return"online"==b?"sync":"disconnected"==b?"sync_problem":"disabled"==b?"sync_disabled":"help"};
this.statusIconClasses=function(){var b=a.status();return"disabled"==b?"md-disabled":"disconnected"==b?"md-warn":"md-primary md-hue-2"}},controllerAs:"endpointStatus",templateUrl:"ng/endpoint-status.html"}}];DevCtrl.Endpoint={};
DevCtrl.Endpoint.Ctrl=["$stateParams","DataService","MenuService",function(b,c,a){var d=this;this.endpointId=b.id;this.endpoints=c.getTable("endpoints");this.obj=this.endpoints.indexed[this.endpointId];b.name=this.obj.fields.name;this.controls=this.obj.referenced.controls;a.toolbarSelectTable("endpoints","endpoints.endpoint",d.obj.id);this.togglePanel=function(a){angular.isDefined(a.opened)?a.opened=!a.opened:a.opened=!0};this.isPanelOpen=function(a){return angular.isDefined(a.opened)&&a.opened};
this.addControl=function(a){c.editRecord(a,"0","controls",{endpoint_type_id:d.obj.fields.endpoint_type_id})};this.editEndpoint=function(a){c.editRecord(a,this.endpointId,"endpoints")}}];DevCtrl.PanelControlSelector={};
DevCtrl.PanelControlSelector.Ctrl=["$mdDialog","DataService",function(b,c){var a=this;this.endpointTypes=c.getTable("endpoint_types");this.endpoints=c.getTable("endpoints");this.controls=c.getTable("controls");this.newPanelControl=c.getNewRowRef("panel_controls");this.newPanelControl.fields.panel_id=this.panelId;this.endpointTypesSelected=[];this.endpointsSelected=[];this.endpointsSelected="0";this.getControlName=function(a){return a.fields.name};this.getEndpointTypes=function(){return this.endpointTypes.indexed};
this.getEndpoints=function(){return this.endpoints.indexed};this.controlList={};this.getControls=function(){angular.forEach(a.controls.indexed,function(b){var c=!1,f=!0;if(angular.isArray(a.endpointsSelected)&&0<a.endpointsSelected.length){var f=!1,k=b.fields.control_endpoint_id;angular.forEach(a.endpointsSelected,function(a){a==k&&(c=!0)})}else if("0"!==a.endpointSelected)f=!1,a.endpointSelected==b.foreign.control_endpoint_id.id&&(c=!0);else if(angular.isArray(a.endpointTypesSelected)&&0<a.endpointTypesSelected.length){var f=
!1,l=b.foreign.endpoints.fields.endpoint_type_id;angular.forEach(a.endpointTypesSelected,function(a){l==a&&(c=!0)})}c||f?a.controlList[b.id]=b:delete a.controlList[b.id]});return a.controlList};this.endpointList={};this.getEndpoints=function(){angular.forEach(a.endpoints.indexed,function(b){var c=!1,f=!0;if(angular.isArray(a.endpointTypesSelected)&&0<a.endpointTypesSelected.length){var f=!1,k=b.fields.endpoint_type_id;angular.forEach(a.endpointTypesSelected,function(a){k==a&&(c=!0)})}c||f?a.endpointList[b.id]=
b:delete a.endpointList[b.id]});return a.endpointList};this.clearEndpointTypes=function(){a.endpointTypesSelected=void 0};this.clearEndpoints=function(){a.endpointsSelected=void 0};this.addPanelControl=function(){c.addRow(a.newPanelControl);b.hide()};this.cancelAdd=function(){b.hide()}}];DevCtrl.EnumEditor={};
DevCtrl.EnumEditor.Ctrl=["$mdDialog","DataService",function(b,c){var a=this;this.enums=c.getTable("enums");this.enumVals=c.getTable("enum_vals");this.newEnumValue=c.getNewRowRef("enum_vals");this.isAddingEnum=!1;this.title=function(){return angular.isString(a.options.title)?a.options.title:"Edit "+a.myEnum.fields.name+" values"};this.isEnumSelectable=function(){return angular.isObject(a.enumRefRecord)};this.updateEnumValue=function(a){c.updateRow(a)};this.addEnumValue=function(){a.newEnumValue.fields.enum_id=a.myEnum.id;
a.newEnumValue.fields.enabled=1;c.addRow(a.newEnumValue);a.newEnumValue=c.getNewRowRef("enum_vals")};this.newEnumCallback=function(b){a.enumRefRecord.fields.enum_id=b.id;a.updateEnum()};this.deleteEnumValue=function(a){c.deleteRow(a)};this.updateEnum=function(){0==a.enumRefRecord.fields.enum_id?a.isAddingEnum=!0:(a.myEnum=a.enums.indexed[a.enumRefRecord.fields.enum_id],c.updateRow(a.enumRefRecord))};this.addNewEnum=function(){a.newEnum=c.getNewRowRef("enums");a.newEnum.fields.name=a.newEnumName;c.addRow(a.newEnum,
a.newEnumCallback);a.newEnumName="";a.isAddingEnum=!1};this.isEnumSelectable&&(a.myEnum=a.enums.indexed[a.enumRefRecord.fields.enum_id]);this.close=function(){b.hide()}}];DevCtrl.FkSelect={};DevCtrl.FkSelect.Directive=["DataService",function(b){return{scope:{tableName:"=table",field:"=",selectModel:"=",fkOnChange:"=",addNewOption:"="},bindToController:!0,controller:function(b){var a=this;this.options=b.getTable(this.tableName);this.schema=b.getSchema(this.tableName);this.updateValue=function(){angular.isFunction(a.fkOnChange)&&a.fkOnChange()}},controllerAs:"fkSelect",templateUrl:"ng/fk-select.html"}}];DevCtrl.Table={};
DevCtrl.Table.Ctrl=["$scope","$stateParams","DataService",function(b,c,a){var d=this;this.tableName=c.name;this.data=a.getTable(this.tableName);this.schema=a.getSchema(this.tableName);this.newRow={table:this.tableName};a.messenger.emit("status-update",{message:"table "+this.tableName+" loaded"});this.sortColumn="id";this.sortReversed=!1;this.setSortColumn=function(a){"fields."+a.name===this.sortColumn?this.sortReversed=!this.sortReversed:(this.sortColumn="fields."+a.name,this.sortReversed=!1)};this.deleteRow=
function(b){b.table=this.tableName;a.deleteRow(b)};this.fkDisplayVal=function(b,c){var d=a.getSchema(this.schema.foreign_keys[b.name]);if(!angular.isDefined(c.foreign[b.name]))return"";var l=c.foreign[b.name];if(null==l)return"NULL";var h=l.id;angular.isDefined(l.fields[d.fk_name])&&(h=l.fields[d.fk_name]);return h};this.addRow=function(b){a.editRecord(b,"0",d.tableName)};this.openRecord=function(b,c){a.editRecord(b,c,d.tableName)};this.updateRow=function(b,c){a.updateRow(c)}}];
DevCtrl.Table.Resolve={tableName:["$stateParams",function(b){return b.table}]};DevCtrl.Rooms={};DevCtrl.Rooms.Ctrl=["DataService",function(b){this.list=b.getTable("rooms").listed;this.imageUrl=function(b){return"/images/"+b.fields.name+".png"}}];DevCtrl.Panel={};
DevCtrl.Panel.Directive=["$mdDialog","MenuService","DataService",function(b,c,a){return{scope:!0,bindToController:{panelObj:"="},controller:function(a,b,c){var k=this;this.fields=this.panelObj.fields;this.menu=b;this.addControl=function(b){a.show({targetEvent:b,locals:{panelId:this.panelObj.id},controller:DevCtrl.PanelControlSelector.Ctrl,controllerAs:"selector",bindToController:!0,templateUrl:"ng/panel-control-selector.html",clickOutsideToClose:!0,hasBackdrop:!1})};this.editPanel=function(a){c.editRecord(a,
this.panelObj.id,this.panelObj.tableName)};this.setAllSwitches=function(a){angular.forEach(k.panelObj.referenced.panel_controls,function(b){b=b.foreign.controls;"switch"==b.fields.usertype&&(b.fields.value=a,c.updateControlValue(b))})};this.getRoomEndpoints=function(a){var b={},c=!angular.isDefined(a);angular.forEach(k.panelObj.foreign.rooms.referenced.panels,function(d,e){(c||d.fields.grouping==a)&&angular.forEach(d.referenced.panel_controls,function(a,c){var d=a.foreign.controls.foreign.endpoints;
angular.isDefined(b[d.id])||(b[d.id]=d)})});return b}},controllerAs:"panel",templateUrl:"ng/panel.html"}}];DevCtrl.App=angular.module("DevCtrlApp",["ui.router","ngMaterial","btford.socket-io","angular-toArrayFilter"]).run(["$rootScope",function(b){b.$on("$stateChangeStart",function(b,a,d,e,f){});b.$on("$stateChangeError",function(b,a,d,e,f){console.log("$stateChangeError - fired when an error occurs during transition.");console.log(arguments)});b.$on("$stateChangeSuccess",function(b,a,d,e,f){});b.$on("$viewContentLoaded",function(b){});b.$on("$stateNotFound",function(b,a,d,e){console.log("$stateNotFound "+
a.to+"  - fired when a state cannot be found by its name.");console.log(a,d,e)})}]);
