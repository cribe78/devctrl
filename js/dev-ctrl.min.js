var DevCtrl={stateConfig:["$stateProvider","$locationProvider","$urlRouterProvider",function(d,b,a){d.state("rooms",{url:"/rooms",scope:!0,controller:"RoomsCtrl",controllerAs:"rooms",templateUrl:"ng/locations.html",resolve:DevCtrl.Common.Resolve,data:{title:"Locations"}}).state("rooms.room",{url:"/:name",templateUrl:"ng/room.html",controller:"RoomCtrl",controllerAs:"room",data:{listByName:"rooms",title:!1}}).state("endpoints",{url:"/devices",templateUrl:"ng/endpoints.html",resolve:DevCtrl.Common.Resolve,
data:{title:"Devices"}}).state("endpoints.endpoint",{url:"/:id",templateUrl:"ng/endpoint.html",controller:"EndpointCtrl",controllerAs:"endpoint",data:{listByName:"control_endpoints",title:!1}}).state("config",{url:"/config",scope:!0,templateUrl:"ng/config.html",resolve:DevCtrl.Common.Resolve,data:{title:"Configuration"}}).state("config.data",{url:"/data",templateUrl:"ng/data.html",data:{title:"Data Tables"}}).state("config.log",{url:"/log",templateUrl:"ng/log.html",controller:"LogCtrl",controllerAs:"log",
resolve:DevCtrl.Log.Resolve,data:{title:"Log Viewer"}}).state("config.data.table",{url:"/:name",templateUrl:"ng/tableeditor.html",controller:"TableCtrl",controllerAs:"table",resolve:DevCtrl.Table.Resolve,data:{title:"Table Editor"}});a.when("/","/rooms");b.html5Mode(!0)}]};DevCtrl.Common={};
DevCtrl.Common.Resolve={loadClients:function(d){return d.getTablePromise("clients")},loadControls:function(d){return d.getTablePromise("controls")},loadControlTemplates:function(d){return d.getTablePromise("control_templates")},loadRooms:function(d){return d.getTablePromise("rooms")},loadPanels:function(d){return d.getTablePromise("panels")},loadPanelControls:function(d){return d.getTablePromise("panel_controls")},loadEndpointTypes:function(d){return d.getTablePromise("endpoint_types")},loadControlEndpoints:function(d){return d.getTablePromise("control_endpoints")},
loadUserInfo:function(d){return d.getAdminAuth()}};DevCtrl.ObjectEditor={};DevCtrl.ObjectEditor.Directive=[function(){return{scope:{object:"="},bindToController:!0,controller:function(){if(!angular.isDefined(this.object)||null==this.object||angular.isArray(this.object))this.object={};this.addItem=function(d,b){angular.isDefined(this.newKey)&&angular.isDefined(this.newVal)&&(this.object[this.newKey]=this.newVal);this.newVal=this.newKey=void 0;angular.element("#oe-new-key").focus()}},controllerAs:"obj",templateUrl:"ng/object-editor.html"}}];DevCtrl.Room={};
DevCtrl.Room.Ctrl=["$stateParams","DataService","MenuService",function(d,b,a){var c=this;this.menu=a;this.roomName=d.name;this.rooms=b.getTable("rooms");angular.forEach(this.rooms.listed,function(a){a.fields.name==c.roomName&&(c.obj=a,c.id=a.id)});this.panels=this.obj.referenced.panels;this.addPanel=function(a){b.editRecord(a,"0","panels",{room_id:c.id})};this.config=b.config;var e={};angular.isObject(this.config.rooms)||(this.config.rooms={});angular.isObject(this.config.rooms[c.id])||(this.config.rooms[this.id]=
{groups:{}});e=this.config.rooms[this.id];this.getGroups=function(){var a={};angular.forEach(e.groups,function(e,c){a[c]=!0});angular.forEach(c.panels,function(c){angular.isDefined(e.groups[c.fields.grouping])||(e.groups[c.fields.grouping]={opened:!1});a[c.fields.grouping]=!1});angular.forEach(a,function(a,c){a&&delete e.groups[c]});return e.groups};this.getRoomEndpoints=function(a){var e={},d=!angular.isDefined(a);angular.forEach(c.obj.referenced.panels,function(c,b){(d||c.fields.grouping==a)&&angular.forEach(c.referenced.panel_controls,
function(a,c){var d=a.foreign.controls.foreign.control_endpoints;angular.isDefined(e[d.id])||(e[d.id]=d)})});return e};this.panelControls=function(a){if(angular.isDefined(a.referenced.panel_controls))return a.referenced.panel_controls};this.toggleGroup=function(a){a.opened=!a.opened;b.updateConfig()}}];DevCtrl.MainCtrl=["$state","$mdMedia","DataService","MenuService",function(d,b,a,c){this.msg="Hello World!";this.tiles=[{img:"/images/orc.png"},{img:"/images/pict.png"},{img:"/images/sage.png"}];this.$state=d;this.schema=a.schema;this.menu=c;this.$mdMedia=b;this.control_endpoints=a.getTable("control_endpoints");this.config=a.config;this.user=a.dataModel.user;this.updateConfig=function(){a.updateConfig()};this.go=function(a){angular.isString(a)?d.go(a):d.go(a.name,a.params)};this.addEndpoint=function(c){a.editRecord(c,
"0","control_endpoints")};this.addEndpointType=function(c){a.editRecord(c,"0","endpoint_types")};this.dataModel=a.dataModel;this.title="DevCtrl";this.top=!0}];DevCtrl.Toolbar={};
DevCtrl.Toolbar.Directive=["$mdMedia","$state","MenuService","DataService",function(d,b,a,c){return{scope:!0,bindToController:{title:"="},controller:function(a,c,b){var f=this;this.menu=c;this.user=b.dataModel.user;this.config=b.config;this.$mdMedia=d;this.client=function(){return b.getRowRef("clients",f.user.client_id)};this.pageTitle=function(){return angular.isDefined(f.title)?f.title:a.current.title||a.params.name};this.adminLogin=function(){b.getAdminAuth(!0)};this.editClient=function(a){b.editRecord(a,
f.user.client_id,"clients")};this.revokeAdmin=function(){b.revokeAdminAuth()};this.updateConfig=function(){b.updateConfig()}},controllerAs:"toolbar",templateUrl:"ng/toolbar.html"}}];DevCtrl.AdminOnly={};DevCtrl.AdminOnly.Directive=["$compile","DataService",function(d,b){return{restrict:"A",replace:!1,terminal:!0,priority:1E3,link:function(a,c,e){var h=!1;"invert"==c.attr("devctrl-admin-only")&&(h=!0);c.removeAttr("devctrl-admin-only");c.attr("ng-if","adminEnabled()");a.adminEnabled=function(){var a=b.isAdminAuthorized()&&b.config.editEnabled;h&&(a=!a);return a};d(c)(a)}}}];DevCtrl.Menu={};DevCtrl.Menu.Directive=["MenuService","$state",function(d,b){return{scope:!0,bindToController:{},controller:function(a,c){this.service=a},controllerAs:"menu",templateUrl:"ng/menu.html"}}];DevCtrl.DataService={};
DevCtrl.DataService.factory=["$window","$http","$mdToast","$timeout","socketFactory","$mdDialog","$location",function(d,b,a,c,e,h,k){var f={user:{username:null,admin:!1,client_id:0},applog:[]},l={},q=!1,r=b.get("schema.php").success(function(a){angular.isDefined(a.schema)&&angular.forEach(a.schema,function(a,c){var b=g.getSchema(c);angular.merge(b,a);angular.isDefined(b.foreign_keys)&&angular.forEach(b.foreign_keys,function(a,c){b.referenced[a]=c})});q=!0}).error(function(a){g.errorToast(a)}),m=io("https://devctrl.dwi.ufl.edu/");
e=e({ioSocket:m});var p={},n={},m={editEnabled:!0};if("undefined"!==typeof d.localStorage){var t=d.localStorage.config;angular.isString(t)?m=JSON.parse(t):d.localStorage.config=JSON.stringify(m)}var g={config:m,messenger:e,dataModel:f,schema:l,addRow:function(a,c){b.post("data.php",a).then(function(b){var d=Object.keys(b.data.add[a.tableName])[0];console.log("new record "+d+"added to "+a.tableName);g.loadData(b.data);b=f[a.tableName].indexed[d];angular.forEach(a,function(c,b){"table"!=b&&(a[b]=null)});
angular.isFunction(c)&&c(b)},function(a){g.errorToast(a.data)})},deleteRow:function(a){var c="data.php/"+a.tableName+"/"+a.id,d=!1;angular.forEach(a.referenced,function(a,c){0<Object.keys(a).length&&(d=c)});d?g.errorToast({error:"Cannot delete "+a.tableName+" record due to foreign key constraint on "+d}):b.delete(c).success(function(a){g.loadData(a)}).error(function(a){g.errorToast(a)})},editEnum:function(a,c,b,d){angular.isObject(d)||(d={});h.show({targetEvent:a,locals:{myEnum:c,enumRefRecord:b,
options:d},controller:DevCtrl.EnumEditor.Ctrl,controllerAs:"editor",bindToController:!0,templateUrl:"ng/enum-editor.html",clickOutsideToClose:!0,hasBackdrop:!1})},editRecord:function(a,c,b,d){"0"!==c?c=g.getRowRef(b,c):(c=g.getNewRowRef(b),angular.isObject(d)&&angular.merge(c.fields,d));h.show({targetEvent:a,locals:{obj:c},controller:DevCtrl.Record.Ctrl,controllerAs:"record",bindToController:!0,templateUrl:"ng/record.html",clickOutsideToClose:!0,hasBackdrop:!1})},editRecordClose:function(){h.hide()},
errorToast:function(c){var b="An unknown error has occured";angular.isDefined(c.error)&&(b=c.error);a.show({templateUrl:"ng/error-toast.html",locals:{message:b},controllerAs:"toast",controller:"RoomsCtrl",bindToController:!0,position:"top right",hideDelay:3E3})},getAdminAuth:function(a){var c="admin_auth.php";a&&(c="admin_auth.php?logon=1&location="+k.path());return b.get(c).then(function(a){angular.isDefined(a.data.user)?angular.merge(f.user,a.data.user):console.log("admin_auth did not return an admin status")},
function(c){"401"==c.status&&(a&&angular.isDefined(c.data.location)?window.location=c.data.location:(angular.isDefined(c.data.user)&&angular.merge(f.user,c.data.user),g.errorToast(c.data)))})},getLog:function(){return b.get("log.php").then(function(a){angular.isDefined(a.data.applog)&&(f.applog.length=0,angular.merge(f.applog,a.data.applog))})},getNewRowRef:function(a){var c={id:"0",referenced:{},tableName:a,fields:{}};a=g.getSchema(a);angular.forEach(a.fields,function(a,b){c.fields[b]=""});return c},
getRowRef:function(a,c){if(!angular.isDefined(a))return console.error("error looking up record for undefined table"),{};if(!angular.isDefined(c)||null===c)return console.error("error looking up %s record for undefined key",a),{};var b=this.getTableRef(a);if(angular.isString(l[a].pk))return angular.isDefined(b.indexed[c])||(b.indexed[c]={fields:{},foreign:{},id:c,loaded:!1,referenced:{},tableName:a},b.listed.push(b.indexed[c])),b.indexed[c];console.error("multi column keys not supported, table %s",
a)},getMenu:function(){angular.isDefined(f.menu)||(f.menu={items:{}},b.get("menu.php").success(function(a){angular.isDefined(a.menu.items)?(console.log("test/menu.php loaded"),f.menu.items=a.menu.items):console.log("test/menu.php did not return a valid menu object")}).error(function(a){g.errorToast(a)}));return f.menu},getSchema:function(a){l.loaded||angular.isDefined(l[a])||(l[a]={referenced:{},foreign_keys:{}});return l[a]},getTable:function(a){angular.isDefined(f[a])?angular.isDefined(n[a])||(n[a]=
this.getTablePromise(a)):(this.getTableRef(a),n[a]=this.getTablePromise(a));return f[a]},getTablePromise:function(a){if(angular.isDefined(n[a]))return n[a];if(angular.isDefined(a))return b.get("data.php?table="+a).success(function(a){g.loadData(a)}).error(function(a){g.errorToast(a)});console.error("error: attempt to fetch undefined table!")},getTableRef:function(a){angular.isDefined(f[a])||(f[a]={listed:[],indexed:{},loaded:!1});return f[a]},isAdminAuthorized:function(){return f.user.admin},loadData:function(a){q?
g.loadDataKernel(a):r=r.then(function(){g.loadDataKernel(a)})},loadDataKernel:function(a){angular.isDefined(a.update)&&angular.forEach(a.update,function(a,c){angular.forEach(a,function(a,b){var d=g.getRowRef(c,b);angular.merge(d.fields,a)})});angular.isDefined(a.add)&&angular.forEach(a.add,function(a,c){var b=g.getSchema(c),d=b.pk,e=b.foreign_keys;angular.forEach(a,function(a,b){if(angular.isString(d)){var h=g.getRowRef(c,b);angular.merge(h.fields,a);h.loaded=!0;angular.forEach(e,function(a,b){if(null!==
h.fields[b]){var d=g.getRowRef(a,h.fields[b]);angular.isDefined(d.referenced[c])||(d.referenced[c]={});d.referenced[c][h.id]=h;h.foreign[a]=d;h.foreign[b]=d}else h.foreign[a]=null,h.foreign[b]=null})}else console.error("Error loading %s, multi-keyed records not supported",c)})});angular.isDefined(a.delete)&&angular.forEach(a.delete,function(a,c){var b=g.getSchema(c).pk;angular.forEach(a,function(a,b){angular.forEach(f[c].indexed[b].foreign,function(a,d){angular.isDefined(a.referenced[c][b])&&delete a.referenced[c][b]});
delete f[c].indexed[b]});f[c].listed.length=0;angular.forEach(f[c].indexed,function(a,d){angular.isString(b)?f[c].listed.push(a):angular.forEach(a,function(a){f[c].listed.push(a)})})})},revokeAdminAuth:function(){b.get("admin_auth_revoke.php").then(function(a){angular.isDefined(a.data.user)?angular.merge(f.user,a.data.user):console.log("revoke admin_auth did not return user info")},function(a){g.errorToast(a.data)})},updateConfig:function(){"undefined"!==typeof d.localStorage&&(d.localStorage.config=
JSON.stringify(g.config))},updateControlValue:function(a){angular.isDefined(p[a.id])&&c.cancel(p[a.id]);p[a.id]=c(function(a,c){var d="control.php/"+a.id;pendingDebounce=!1;b.put(d,a.fields).success(function(a){c.loadData(a)}).error(function(a){c.errorToast(a)})},200,!0,a,g)},updateRow:function(a){b.put("data.php/"+a.tableName+"/"+a.id,a.fields).success(function(a){g.loadData(a)}).error(function(a){g.errorToast(a)})}};e.on("control-data",function(a){g.loadData(a)});e.on("log-data",function(a){g.dataModel.applog.push(a)});
return g}];DevCtrl.Slider2d={};
DevCtrl.Slider2d.Directive=["DataService",function(d){return{scope:{control:"="},bindToController:!0,controller:function(b){var a=this,c,d;this.xValue=function(b){angular.isDefined(b)?(c=b,a.control.ctrl.fields.value=c+","+d):this.setXYVals();return c};this.yValue=function(b){angular.isDefined(b)?(d=b,a.control.ctrl.fields.value=c+","+d):this.setXYVals();return d};this.setXYVals=function(){var b=a.control.ctrl.fields.value.split(",");c=angular.isDefined(b[0])?b[0]:0;c=parseInt(c);d=angular.isDefined(b[1])?
b[1]:0;d=parseInt(d)};this.setXYVals();this.updateValue=function(){b.updateControlValue(a.control.ctrl)}},controllerAs:"slider2d",templateUrl:"ng/controls/slider2d-directive.html"}}];DevCtrl.EnumSelect={};
DevCtrl.EnumSelect.Directive=["DataService",function(d){return{scope:{tableName:"=table",field:"=",selectModel:"="},bindToController:!0,controller:function(b){this.enums=b.getTable("enums");this.enumVals=b.getTable("enum_vals");this.schema=b.getSchema(this.tableName);this.enumId=function(){var a=0,c=this.tableName+"."+this.field.name;angular.forEach(this.enums.indexed,function(b,d){b.fields.name==c&&(a=d)});return a};this.options=function(){var a=this.enumId(),c={};0<a&&(c=this.enums.indexed[a].referenced.enum_vals);return c}},
controllerAs:"enumSelect",templateUrl:"ng/enum-select.html"}}];DevCtrl.Ctrl={};
DevCtrl.Ctrl.Directive=["DataService","MenuService",function(d,b){return{scope:{panelControl:"=",controlId:"="},bindToController:!0,controller:function(a,c){this.menu=c;(this.panelContext=angular.isDefined(this.panelControl))?(this.ctrl=this.panelControl.foreign.controls,this.name=this.panelControl.fields.name):(this.ctrl=a.getTable("controls").indexed[this.controlId],this.name=this.ctrl.fields.name);this.ctrlName=function(){return this.panelContext&&""!==this.panelControl.fields.name?this.panelControl.fields.name:
""!=this.ctrl.fields.name?this.ctrl.fields.name:this.ctrl.foreign.control_templates.fields.name};this.template=this.ctrl.foreign.control_templates;this.config=function(a){if(angular.isObject(this.ctrl.fields.config)&&angular.isDefined(this.ctrl.fields.config[a]))return this.ctrl.fields.config[a];if(angular.isObject(this.template.fields.config)&&angular.isDefined(this.template.fields.config[a]))return this.template.fields.config[a]};this.intConfig=function(a){a=b.config(a);return parseInt(a)};this.appConfig=
a.config;this.type=this.template.fields.usertype;this.enums=a.getTable("enums");this.enumVals=a.getTable("enum_vals");var b=this;this.normalizedValue=function(){var a=b.ctrl.fields.value,c=b.intConfig("max"),d=b.intConfig("min"),a=a<d?d:a;return((a>c?c:a)+(0-d))*(c-d)/100};this.updateValue=function(c){a.updateControlValue(b.ctrl)};this.editOptions=function(c){a.editEnum(c,null,b.ctrl,{title:"Edit "+b.name+" options"})};this.editTemplateOptions=function(c){a.editEnum(c,null,b.template,{title:"Edit "+
b.ctrlName()+" options"})};this.selectMenuItem=function(a){b.ctrl.fields.value=a;b.updateValue()};this.selectOptions=function(){var a=b.ctrl.fields.enum_id,c={};0<a?c=b.enums.indexed[a].referenced.enum_vals:0<b.template.fields.enum_id&&(c=b.template.foreign.enums.referenced.enum_vals);return c};this.selectValueName=function(){var a=b.selectOptions(),c=b.ctrl.fields.value,d="";angular.forEach(a,function(a){a.fields.value==c&&(d=a.fields.name)});return d};this.editPanelControl=function(c){a.editRecord(c,
b.panelControl.id,"panel_controls")};this.editControl=function(c){a.editRecord(c,b.ctrl.id,"controls")};this.editTemplate=function(c){a.editRecord(c,b.template.id,"control_templates")}},controllerAs:"ctrl",templateUrl:"ng/ctrl.html"}}];DevCtrl.Record={};
DevCtrl.Record.Ctrl=["DataService",function(d){this.newRow="0"===this.obj.id;this.schema=d.getSchema(this.obj.tableName);this.editStack=[];var b=this;this.addRow=function(){d.addRow(b.obj);b.close(!0)};this.deleteRow=function(){d.deleteRow(b.obj);b.close(!0)};this.editOtherRow=function(a){b.editStack.push(b.obj);b.obj=a;b.schema=d.getSchema(a.tableName)};this.updateRow=function(){d.updateRow(b.obj);b.close(!0)};this.cloneRow=function(){var a=d.getNewRowRef(b.obj.tableName);a.fields=b.obj.fields;d.addRow(a,
function(a){b.obj=a;angular.isDefined(b.obj.fields.name)&&(b.obj.fields.name="")})};this.close=function(a){a&&0<b.editStack.length?(b.obj=b.editStack.pop(),b.schema=d.getSchema(b.obj.tableName)):d.editRecordClose()}}];DevCtrl.Log={};DevCtrl.Log.Ctrl=["DataService",function(d){this.applog=d.dataModel.applog}];DevCtrl.Log.Resolve={loadLog:["DataService",function(d){return d.getLog()}]};DevCtrl.MenuService={};
DevCtrl.MenuService.factory=["$state","$mdSidenav","$mdMedia","DataService",function(d,b,a,c){var e={sidenavOpen:!1};angular.isObject(c.config.menu)?e=c.config.menu:c.config.menu=e;var h={backgroundImageStyle:function(){return angular.isDefined(d.current.name)&&angular.isDefined(d.params.name)?{"background-image":"url(/images/backgrounds/"+d.current.name+"/"+d.params.name+".jpg)"}:{}},go:function(a){angular.isString(a)?d.go(a):d.go(a.name,a.params)},pageTitle:function(){return d.current.title||d.params.name},
parentState:function(){return d.get("^")},isFirstLevel:function(){return""===d.current.name||""===d.get("^").name},items:{},states:function(){return d.get()},menuItems:function(){var a=d.get();angular.forEach(a,function(a,c){""!=a.name&&(a.isOpened=d.includes(a),""==d.get("^",a).name&&(h.items[a.name]=a,angular.isDefined(a.substates)||(a.substates={})),angular.isDefined(a.data.title)&&(a.title=a.data.title))});angular.forEach(a,function(a,b){if(""!=a.name){var e=d.get("^",a);if(angular.isDefined(h.items[e.name]))if(angular.isDefined(a.data.listByName)){var k=
c.getTable(a.data.listByName).listed;angular.forEach(k,function(c){angular.isDefined(e.substates[c.id])?(e.substates[c.id].params.name=c.fields.name,e.substates[c.id].title=c.fields.name):e.substates[c.id]={name:a.name,params:{name:c.fields.name,id:c.id},title:c.fields.name}})}else h.items[e.name].substates[a.name]=a}});return h.items},hideSidenavButton:function(){return h.narrowMode()?!1:e.sidenavOpen},isSidenavOpen:function(){return e.sidenavOpen},toggleSidenav:function(a){angular.isDefined(e.sidenavOpen)||
(e.sidenavOpen=!1);e.sidenavOpen=!e.sidenavOpen;c.updateConfig();h.narrowMode()&&b(a).toggle()},narrowMode:function(){return a("max-width: 1000px")}};return h}];DevCtrl.EndpointStatus={};
DevCtrl.EndpointStatus.Directive=["DataService",function(d){return{scope:{endpointId:"="},bindToController:!0,controller:function(b){var a=this;this.endpoint=b.getRowRef("control_endpoints",this.endpointId);this.status=function(){return a.endpoint.fields.enabled?""==a.endpoint.fields.status||null==a.endpoint.fields.status?"unknown":a.endpoint.fields.status:"disabled"};this.statusIcon=function(){var c=a.status();return"online"==c?"sync":"disconnected"==c?"sync_problem":"disabled"==c?"sync_disabled":
"help"};this.statusIconClasses=function(){var c=a.status();return"disabled"==c?"md-disabled":"disconnected"==c?"md-warn":"md-primary md-hue-2"}},controllerAs:"endpointStatus",templateUrl:"ng/endpoint-status.html"}}];DevCtrl.Endpoint={};
DevCtrl.Endpoint.Ctrl=["$stateParams","DataService",function(d,b){var a=this;this.endpointId=d.id;this.endpoints=b.getTable("control_endpoints");this.obj=this.endpoints.indexed[this.endpointId];d.name=this.obj.fields.name;this.controls=this.obj.referenced.controls;this.togglePanel=function(a){angular.isDefined(a.opened)?a.opened=!a.opened:a.opened=!0};this.isPanelOpen=function(a){return angular.isDefined(a.opened)&&a.opened};this.addTemplate=function(c){b.editRecord(c,"0","control_templates",{endpoint_type_id:a.obj.fields.endpoint_type_id})};
this.editEndpoint=function(a){b.editRecord(a,this.endpointId,"control_endpoints")}}];DevCtrl.PanelControlSelector={};
DevCtrl.PanelControlSelector.Ctrl=["$mdDialog","DataService",function(d,b){var a=this;this.endpointTypes=b.getTable("endpoint_types");this.endpoints=b.getTable("control_endpoints");this.controls=b.getTable("controls");this.control_templates=b.getTable("control_templates");this.newPanelControl=b.getNewRowRef("panel_controls");this.newPanelControl.fields.panel_id=this.panelId;this.endpointTypesSelected=[];this.endpointsSelected=[];this.endpointsSelected="0";this.getControlName=function(a){var b=a.fields.name;
""==a.fields.name&&(b=a.foreign.control_templates.fields.name);return b};this.getEndpointTypes=function(){return this.endpointTypes.indexed};this.getEndpoints=function(){return this.endpoints.indexed};this.controlList={};this.getControls=function(){angular.forEach(a.controls.indexed,function(c){var b=!1,d=!0;if(angular.isArray(a.endpointsSelected)&&0<a.endpointsSelected.length){var d=!1,k=c.fields.control_endpoint_id;angular.forEach(a.endpointsSelected,function(a){a==k&&(b=!0)})}else if("0"!==a.endpointSelected)d=
!1,a.endpointSelected==c.foreign.control_endpoint_id.id&&(b=!0);else if(angular.isArray(a.endpointTypesSelected)&&0<a.endpointTypesSelected.length){var d=!1,f=c.foreign.control_endpoints.fields.endpoint_type_id;angular.forEach(a.endpointTypesSelected,function(a){f==a&&(b=!0)})}b||d?a.controlList[c.id]=c:delete a.controlList[c.id]});return a.controlList};this.endpointList={};this.getEndpoints=function(){angular.forEach(a.endpoints.indexed,function(c){var b=!1,d=!0;if(angular.isArray(a.endpointTypesSelected)&&
0<a.endpointTypesSelected.length){var d=!1,k=c.fields.endpoint_type_id;angular.forEach(a.endpointTypesSelected,function(a){k==a&&(b=!0)})}b||d?a.endpointList[c.id]=c:delete a.endpointList[c.id]});return a.endpointList};this.clearEndpointTypes=function(){a.endpointTypesSelected=void 0};this.clearEndpoints=function(){a.endpointsSelected=void 0};this.addPanelControl=function(){b.addRow(a.newPanelControl);d.hide()};this.cancelAdd=function(){d.hide()}}];DevCtrl.EnumEditor={};
DevCtrl.EnumEditor.Ctrl=["$mdDialog","DataService",function(d,b){var a=this;this.enums=b.getTable("enums");this.enumVals=b.getTable("enum_vals");this.newEnumValue=b.getNewRowRef("enum_vals");this.isAddingEnum=!1;this.title=function(){return angular.isString(a.options.title)?a.options.title:"Edit "+a.myEnum.fields.name+" values"};this.isEnumSelectable=function(){return angular.isObject(a.enumRefRecord)};this.updateEnumValue=function(a){b.updateRow(a)};this.addEnumValue=function(){a.newEnumValue.fields.enum_id=a.myEnum.id;
a.newEnumValue.fields.enabled=1;b.addRow(a.newEnumValue);a.newEnumValue=b.getNewRowRef("enum_vals")};this.newEnumCallback=function(b){a.enumRefRecord.fields.enum_id=b.id;a.updateEnum()};this.deleteEnumValue=function(a){b.deleteRow(a)};this.updateEnum=function(){0==a.enumRefRecord.fields.enum_id?a.isAddingEnum=!0:(a.myEnum=a.enums.indexed[a.enumRefRecord.fields.enum_id],b.updateRow(a.enumRefRecord))};this.addNewEnum=function(){a.newEnum=b.getNewRowRef("enums");a.newEnum.fields.name=a.newEnumName;b.addRow(a.newEnum,
a.newEnumCallback);a.newEnumName="";a.isAddingEnum=!1};this.isEnumSelectable&&(a.myEnum=a.enums.indexed[a.enumRefRecord.fields.enum_id]);this.close=function(){d.hide()}}];DevCtrl.FkSelect={};DevCtrl.FkSelect.Directive=["DataService",function(d){return{scope:{tableName:"=table",field:"=",selectModel:"=",fkOnChange:"=",addNewOption:"="},bindToController:!0,controller:function(b){var a=this;this.options=b.getTable(this.tableName);this.schema=b.getSchema(this.tableName);this.updateValue=function(){angular.isFunction(a.fkOnChange)&&a.fkOnChange()}},controllerAs:"fkSelect",templateUrl:"ng/fk-select.html"}}];DevCtrl.Table={};
DevCtrl.Table.Ctrl=["$scope","$stateParams","DataService",function(d,b,a){var c=this;this.tableName=b.name;this.data=a.getTable(this.tableName);this.schema=a.getSchema(this.tableName);this.newRow={table:this.tableName};a.messenger.emit("status-update",{message:"table "+this.tableName+" loaded"});this.sortColumn="id";this.sortReversed=!1;this.setSortColumn=function(a){"fields."+a.name===this.sortColumn?this.sortReversed=!this.sortReversed:(this.sortColumn="fields."+a.name,this.sortReversed=!1)};this.deleteRow=
function(b){b.table=this.tableName;a.deleteRow(b)};this.fkDisplayVal=function(b,c){var d=a.getSchema(this.schema.foreign_keys[b.name]);if(!angular.isDefined(c.foreign[b.name]))return"";var f=c.foreign[b.name];if(null==f)return"NULL";var l=f.id;angular.isDefined(f.fields[d.fk_name])&&(l=f.fields[d.fk_name]);return l};this.addRow=function(b){a.editRecord(b,"0",c.tableName)};this.openRecord=function(b,d){a.editRecord(b,d,c.tableName)};this.updateRow=function(b,c){a.updateRow(c)}}];
DevCtrl.Table.Resolve={tableName:["$stateParams",function(d){return d.table}]};DevCtrl.Rooms={};DevCtrl.Rooms.Ctrl=["DataService",function(d){this.list=d.getTable("rooms").listed;this.imageUrl=function(b){return"/images/"+b.fields.name+".png"}}];DevCtrl.Panel={};
DevCtrl.Panel.Directive=["$mdDialog","MenuService","DataService",function(d,b,a){return{scope:!0,bindToController:{panelObj:"="},controller:function(a,b,d){var k=this;this.fields=this.panelObj.fields;this.menu=b;this.addControl=function(b){a.show({targetEvent:b,locals:{panelId:this.panelObj.id},controller:DevCtrl.PanelControlSelector.Ctrl,controllerAs:"selector",bindToController:!0,templateUrl:"ng/panel-control-selector.html",clickOutsideToClose:!0,hasBackdrop:!1})};this.editPanel=function(a){d.editRecord(a,
this.panelObj.id,this.panelObj.tableName)};this.setAllSwitches=function(a){angular.forEach(k.panelObj.referenced.panel_controls,function(b){b=b.foreign.controls;"switch"==b.foreign.control_templates.fields.usertype&&(b.fields.value=a,d.updateControlValue(b))})};this.getRoomEndpoints=function(a){var b={},c=!angular.isDefined(a);angular.forEach(k.panelObj.foreign.rooms.referenced.panels,function(d,e){(c||d.fields.grouping==a)&&angular.forEach(d.referenced.panel_controls,function(a,c){var d=a.foreign.controls.foreign.control_endpoints;
angular.isDefined(b[d.id])||(b[d.id]=d)})});return b}},controllerAs:"panel",templateUrl:"ng/panel.html"}}];DevCtrl.App=angular.module("DevCtrlApp",["ui.router","ngMaterial","btford.socket-io","angular-toArrayFilter"]).factory("DataService",DevCtrl.DataService.factory).factory("MenuService",DevCtrl.MenuService.factory).directive("ctrl",DevCtrl.Ctrl.Directive).directive("coeMenu",DevCtrl.Menu.Directive).directive("devctrlPanel",DevCtrl.Panel.Directive).directive("fkSelect",DevCtrl.FkSelect.Directive).directive("enumSelect",DevCtrl.EnumSelect.Directive).directive("devctrlSlider2d",DevCtrl.Slider2d.Directive).directive("devctrlObjectEditor",
DevCtrl.ObjectEditor.Directive).directive("devctrlAdminOnly",DevCtrl.AdminOnly.Directive).directive("devctrlEndpointStatus",DevCtrl.EndpointStatus.Directive).directive("devctrlToolbar",DevCtrl.Toolbar.Directive).controller("MainCtrl",DevCtrl.MainCtrl).controller("EnumEditorCtrl",DevCtrl.EnumEditor.Ctrl).controller("PanelControlSelectorCtrl",DevCtrl.PanelControlSelector.Ctrl).controller("EndpointCtrl",DevCtrl.Endpoint.Ctrl).controller("LogCtrl",DevCtrl.Log.Ctrl).controller("TableCtrl",DevCtrl.Table.Ctrl).controller("RecordCtrl",
DevCtrl.Record.Ctrl).controller("RoomCtrl",DevCtrl.Room.Ctrl).controller("RoomsCtrl",DevCtrl.Rooms.Ctrl).config(DevCtrl.stateConfig).run(["$rootScope",function(d){d.$on("$stateChangeStart",function(b,a,c,d,h){console.log("$stateChangeStart to "+a.to+"- fired when the transition begins. toState,toParams : \n",a,c)});d.$on("$stateChangeError",function(b,a,c,d,h){console.log("$stateChangeError - fired when an error occurs during transition.");console.log(arguments)});d.$on("$stateChangeSuccess",function(b,
a,c,d,h){console.log("$stateChangeSuccess to "+a.name+"- fired once the state transition is complete.")});d.$on("$viewContentLoaded",function(b){console.log("$viewContentLoaded - fired after dom rendered",b)});d.$on("$stateNotFound",function(b,a,c,d){console.log("$stateNotFound "+a.to+"  - fired when a state cannot be found by its name.");console.log(a,c,d)})}]);
