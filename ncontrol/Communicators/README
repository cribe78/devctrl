

/*
 - Communicator builds list of device controls (control templates)
 - Communicator syncs control list with messenger
 - device controls are paired with application controls based on endpoint and device control name
 - control templates have default usertype, application controls may override this type

 - device commands can be tied to multiple device controls


 - Communicator receives a control update:
    - communicator looks up command for control template
    - device string is generated and sent

 - Communicator receives a device string:
    - device string is matched to command
    - control templates are looked up for command
    - command returns value for each control


  - Control sync process:
    - Communicator builds list of commands and a list of control templates
    - Control templates are synced with server
      - ncontrol requests list of server defined control templates
      - server control_templates are matched with ncontrol templates based on ctid
        - "ctid" and 'control_template_id' are both key fields.  control_template_id is the mongo document id,
         "ctid" is unique within the endpoint communicator instance and generated by the class definition
      - ncontrol adds missing control templates and updates server control_templates which do not match class
      definition
    - Commands/device controls/control te mplates are ncontrol local only (not present in database)
    -


   - CHanges from Devctrl-mysql:
     - control templates are specific to device, rather than device type.
     - value stored on template?
 */